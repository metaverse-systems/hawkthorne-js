{"version":3,"sources":["../../src/index.ts","../../src/SpriteSheet.ts","../../src/SpriteAnimation.ts","../../src/Component.ts","../../src/Manager.ts","../../src/Container.ts","../../src/Entity.ts","../../src/System.ts","../../src/Components.ts","SpriteSheet.js","DrawingSystem.js","App.js","reportWebVitals.js","index.js"],"names":["exports","spriteWidth","i","this","handle","c","StaticSpriteComponent","libecs_js_1","Component","config","SpriteSheet","canvas","url","spriteHeight","draw","spriteX","spriteY","x","y","options","undefined","scale","xScale","xTranslate","yScale","yTranslate","newX","newY","flipHorizontal","width","flipVertical","height","flipDiagonal","context","save","translate","rotate","Math","PI","drawImage","sheet","restore","Image","src","getContext","DrawingSystem","Init","Container","Components","ConfigUpdate","Object","keys","forEach","key","board","ShouldDraw","viewport","camera","parseInt","o","Update","ctx","clearRect","Tilesheets","entity","tilesheet","tilesheets","console","log","EntityDestroy","scene","CurrentScenes","Scenes","pos","rect","beginPath","fillStyle","color","fill","tile","ssprite","sprite","animate","animation","direction","polygon","strokeStyle","moveTo","points","point","lineTo","closePath","stroke","polyline","Handle","System","ECS","Manager","baseURL","baseMusicURL","App","props","componentWillUnmount","document","removeEventListener","keyDown","componentDidMount","addEventListener","handleResize","loadMap","state","drawingSystem","getElementById","setMusic","track","soundtrackURL","search","setState","music","play","e","mapURL","map","world","Entity","CurrentSceneComponent","LoadSceneComponent","moveCamera","centerCamera","rightTrigger","leftTrigger","setBackgroundColor","PositionComponent","backgroundWidth","tileWidth","backgroundHeight","tileHeight","properties","red","toString","green","blue","RectangleComponent","initializePlayer","spriteURL","playerCharacter","playerCostume","levelStart","SpriteComponent","characterMap","changeAnimation","target","value","updateSpriteComponent","changeDirection","destroyMap","destroy","changeMap","volume","newPos","characters","window","innerWidth","innerHeight","Start","setTimeout","TMX_MapLoadingSystem","tilesheetBaseURL","id","style","float","htmlFor","defaultValue","onChange","Maps","m","a","loop","controls","onVolumeChanged","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4996c1da.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.System = exports.Manager = exports.Component = void 0;\nvar Component_1 = require(\"./Component\");\nObject.defineProperty(exports, \"Component\", { enumerable: true, get: function () { return Component_1.Component; } });\nvar Manager_1 = require(\"./Manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return Manager_1.Manager; } });\nvar System_1 = require(\"./System\");\nObject.defineProperty(exports, \"System\", { enumerable: true, get: function () { return System_1.System; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpriteSheet = void 0;\nclass SpriteSheet {\n    constructor(canvas, url, spriteWidth, spriteHeight) {\n        /*\n         *  spriteX: column in sprite sheet\n         *  spriteY: row in sprite sheet\n         *  x, y: Canvas coordinates\n         *  scale: Shrink or enlarge sprite\n         */\n        this.draw = (spriteX, spriteY, x, y, options = { flipVertical: false, flipHorizontal: false, flipDiagonal: false, scale: 1 }) => {\n            if (options.scale === undefined)\n                options.scale = 1;\n            let xScale = 1, xTranslate = 0;\n            let yScale = 1, yTranslate = 0;\n            let newX = x, newY = y;\n            if (options.flipHorizontal === true) {\n                xScale = -1;\n                xTranslate = this.canvas.width;\n                newX = this.canvas.width - x - this.spriteWidth;\n            }\n            if (options.flipVertical === true) {\n                yScale = -1;\n                yTranslate = this.canvas.height;\n                newY = this.canvas.height - y - this.spriteHeight;\n            }\n            if (options.flipDiagonal) {\n                this.context.save();\n                this.context.translate(x, y);\n                this.context.rotate(270 * (Math.PI / 180));\n                this.context.drawImage(this.sheet, (spriteX * this.spriteWidth), (spriteY * this.spriteHeight), this.spriteWidth, this.spriteHeight, -this.spriteWidth, 0, this.spriteWidth * options.scale, this.spriteHeight * options.scale);\n                this.context.restore();\n                return;\n            }\n            if (options.flipVertical || options.flipHorizontal) {\n                this.context.save();\n                this.context.translate(xTranslate, yTranslate);\n                this.context.scale(xScale, yScale);\n                this.context.drawImage(this.sheet, (spriteX * this.spriteWidth), (spriteY * this.spriteHeight), this.spriteWidth, this.spriteHeight, newX, newY, this.spriteWidth * options.scale, this.spriteHeight * options.scale);\n                this.context.restore();\n            }\n            else {\n                this.context.drawImage(this.sheet, (spriteX * this.spriteWidth), (spriteY * this.spriteHeight), this.spriteWidth, this.spriteHeight, x, y, this.spriteWidth * options.scale, this.spriteHeight * options.scale);\n            }\n        };\n        this.sheet = new Image();\n        this.sheet.src = url;\n        this.spriteWidth = spriteWidth;\n        this.spriteHeight = spriteHeight;\n        this.canvas = canvas;\n        this.context = canvas.getContext(\"2d\");\n    }\n}\nexports.SpriteSheet = SpriteSheet;\n;\n//# sourceMappingURL=SpriteSheet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpriteAnimation = void 0;\nconst SpriteSheet_1 = require(\"./SpriteSheet\");\nclass SpriteAnimation {\n    constructor(canvas, url, spriteWidth, spriteHeight, characterMap) {\n        this.animate = (animation, direction, x, y, scale) => {\n            let restart = false;\n            if (this.animation !== animation) {\n                this.animation = animation;\n                restart = true;\n            }\n            if (this.direction !== direction) {\n                this.direction = direction;\n                restart = true;\n            }\n            if (restart) {\n                this.frame = 0;\n                this.loop = [];\n                let charMap = this.characterMap[animation];\n                let animations = [];\n                if (Array.isArray(charMap)) {\n                    // No direction\n                    this.repeat = charMap[0];\n                    animations = charMap[1];\n                }\n                else {\n                    this.repeat = charMap[direction][0];\n                    animations = charMap[direction][1];\n                }\n                animations.forEach((e) => {\n                    // subtracting 1 because character_map.json uses 1-based indexing\n                    let [x, y] = e.split(\",\");\n                    if (x.search(\"-\") !== -1) {\n                        // multiple x coords in one entry, split them up\n                        let [startX, endX] = x.split(\"-\");\n                        for (let i = startX; i <= endX; i++) {\n                            this.loop.push({ x: (i - 1), y: (y - 1) });\n                        }\n                    }\n                    else {\n                        this.loop.push({ x: (x - 1), y: (y - 1) });\n                    }\n                });\n            }\n            this.draw(x, y, scale);\n        };\n        /*\n         *  x, y: Canvas coordinates\n         *  scale: Shrink or enlarge sprite\n         */\n        this.draw = (x, y, scale) => {\n            if (this.loop.length === 0)\n                return;\n            this.sheet.draw(this.loop[this.frame].x, this.loop[this.frame].y, x, y, scale);\n            this.frame++;\n            if (this.frame === this.loop.length)\n                this.frame = 0;\n        };\n        this.sheet = new SpriteSheet_1.SpriteSheet(canvas, url, spriteWidth, spriteHeight);\n        this.frame = 0;\n        this.animation = \"\";\n        this.direction = \"\";\n        this.repeat = \"\";\n        this.loop = [];\n        this.characterMap = characterMap;\n    }\n}\nexports.SpriteAnimation = SpriteAnimation;\n;\n//# sourceMappingURL=SpriteAnimation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Component = void 0;\n/** Base class for ECS component */\nclass Component {\n    constructor(config) {\n        this.EntityHandle = null;\n        Object.keys(config).forEach((name) => {\n            this[name] = config[name];\n        });\n    }\n    Export() {\n        var config = {};\n        Object.keys(this).forEach((name) => {\n            if (name == \"EntityHandle\")\n                return;\n            if (name == \"Type\")\n                return;\n            config[name] = this[name];\n        });\n        return config;\n    }\n}\nexports.Component = Component;\n//# sourceMappingURL=Component.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst Container_1 = __importDefault(require(\"./Container\"));\nclass Manager {\n    constructor() {\n        this.Containers = [];\n        this.Running = true;\n    }\n    ContainerCreate(handle) {\n        var c = new Container_1.default(handle);\n        this.Containers[c.Handle] = c;\n        return this.Containers[c.Handle];\n    }\n    Container(handle) {\n        if (handle !== null) {\n            if (this.Containers[handle] !== undefined)\n                return this.Containers[handle];\n            return this.ContainerCreate(handle);\n        }\n        return this.ContainerCreate(null);\n    }\n    ContainersGet() {\n        return this.Containers;\n    }\n    ContainersKill(containers) {\n        containers.forEach(function (c) {\n            clearInterval(c.interval);\n        });\n    }\n    IsRunning() {\n        return this.Running;\n    }\n    Shutdown() {\n        this.Running = false;\n        this.ContainersKill(this.ContainersGet());\n    }\n}\nexports.Manager = Manager;\n//# sourceMappingURL=Manager.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid_1 = require(\"uuid\");\nconst Entity_1 = __importDefault(require(\"./Entity\"));\nclass Container {\n    constructor(handle) {\n        this.Handle = handle;\n        if (this.Handle === undefined) {\n            this.Handle = (0, uuid_1.v4)();\n        }\n        this.Entities = {};\n        this.Systems = {};\n        this.Components = {};\n        this.SleepInterval = 1000 / 30;\n        this.IntervalFunc = null;\n        this.Running = false;\n        this.isInit = false;\n    }\n    Start(interval) {\n        if (interval !== undefined) {\n            this.SleepInterval = interval;\n        }\n        this.SystemsInit();\n        this.IntervalFunc = setInterval(() => this.Update(), this.SleepInterval);\n        this.Running = true;\n    }\n    Stop() {\n        this.Running = false;\n    }\n    SystemsInit() {\n        Object.keys(this.Systems).forEach((sys) => {\n            if (!this.isInit)\n                this.Systems[sys].Init();\n            this.Systems[sys].LastTime = (new Date()).getTime();\n        });\n        this.isInit = true;\n    }\n    Update() {\n        Object.keys(this.Systems).forEach((sys) => {\n            this.Systems[sys].Update();\n        });\n        if (this.Running === false) {\n            clearInterval(this.IntervalFunc);\n        }\n    }\n    ManagerSet(manager) {\n        this.Manager = manager;\n    }\n    HandleGet() {\n        return this.Handle;\n    }\n    Entity(handle) {\n        return this.EntityCreate(handle);\n    }\n    System(sys) {\n        sys.ContainerSet(this);\n        this.Systems[sys.HandleGet()] = sys;\n        return sys;\n    }\n    EntityCreate(handle) {\n        var e;\n        if (handle === undefined) {\n            e = new Entity_1.default();\n            this.Entities[e.HandleGet()] = e;\n        }\n        else {\n            if (this.Entities[handle] === undefined) {\n                e = new Entity_1.default(handle);\n                this.Entities[e.HandleGet()] = e;\n            }\n            else\n                e = this.Entities[handle];\n        }\n        e.ContainerSet(this);\n        return e;\n    }\n    EntityDestroy(handle) {\n        Object.keys(this.Components).forEach((type) => {\n            delete this.Components[type][handle];\n        });\n    }\n    Component(c) {\n        if (this.Components[c.Type] === undefined) {\n            this.Components[c.Type] = {};\n        }\n        this.Components[c.Type][c.EntityHandle] = c;\n        return c;\n    }\n    ComponentsGet(types) {\n        var results = {};\n        types.forEach((type) => {\n            results[type] = this.Components[type];\n            if (results[type] === undefined) {\n                results[type] = {};\n            }\n        });\n        return results;\n    }\n    Export() {\n        const config = {\n            Handle: this.Handle,\n            Entities: [],\n            Systems: []\n        };\n        Object.keys(this.Entities).forEach((e) => {\n            config.Entities.push(this.Entities[e].Export());\n        });\n        Object.keys(this.Systems).forEach((s) => {\n            config.Systems.push(this.Systems[s].Export());\n        });\n        return config;\n    }\n}\nexports.default = Container;\n//# sourceMappingURL=Container.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid_1 = require(\"uuid\");\n/** ECS Entity */\nclass Entity {\n    constructor(handle) {\n        this.Handle = (handle === undefined) ? (0, uuid_1.v4)() : handle;\n        this.Components = {};\n    }\n    HandleGet() {\n        return this.Handle;\n    }\n    ContainerSet(container) {\n        this.Container = container;\n    }\n    Component(c) {\n        c.EntityHandle = this.Handle;\n        if (this.Components[c.Type] === undefined) {\n            this.Components[c.Type] = {};\n        }\n        this.Components[c.Type][this.Handle] = c;\n        return this.Container.Component(c);\n    }\n    Export() {\n        var config = {\n            Handle: this.Handle,\n            Components: {}\n        };\n        Object.keys(this.Components).forEach((type) => {\n            Object.keys(this.Components[type]).forEach((entity) => {\n                config.Components[type] = this.Components[type][entity].Export();\n            });\n        });\n        return config;\n    }\n    destroy() {\n        this.Container.EntityDestroy(this.Handle);\n    }\n}\nexports.default = Entity;\n//# sourceMappingURL=Entity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.System = void 0;\n/** Base class for ECS System */\nclass System {\n    constructor(config) {\n        this.Handle = null;\n        this.RequestedComponents = [];\n        this.LastTime = (new Date()).getTime();\n        this.config = {};\n        Object.keys(config).map((key) => {\n            if (typeof config[key] == \"function\") {\n                this[key] = config[key];\n            }\n            else {\n                this.config[key] = config[key];\n            }\n        });\n    }\n    HandleGet() {\n        return this.Handle;\n    }\n    ContainerSet(container) {\n        this.Container = container;\n    }\n    ComponentRequest(component) {\n        if (this.RequestedComponents.includes(component))\n            return;\n        this.RequestedComponents.push(component);\n    }\n    ComponentsGet() {\n        return this.Container.ComponentsGet(this.RequestedComponents);\n    }\n    DeltaTimeGet() {\n        var now = (new Date()).getTime();\n        var dt = now - this.LastTime;\n        this.LastTime = now;\n        return dt;\n    }\n    Init() {\n    }\n    Export() {\n        var config = {\n            Handle: this.Handle\n        };\n        Object.keys(this.config).forEach((name) => {\n            config[name] = this.config[name];\n        });\n        return config;\n    }\n}\nexports.System = System;\n//# sourceMappingURL=System.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SceneTilesheetComponent = exports.ObjectComponent = exports.LevelStartComponent = exports.LoadSceneComponent = exports.SceneComponent = exports.CurrentSceneComponent = exports.RectangleComponent = exports.PolylineComponent = exports.PolygonComponent = exports.TilesheetComponent = exports.TileComponent = exports.PositionComponent = exports.StaticSpriteComponent = exports.SpriteComponent = void 0;\nconst libecs_js_1 = require(\"@metaverse-systems/libecs-js\");\nconst SpriteAnimation_1 = require(\"./SpriteAnimation\");\nconst SpriteSheet_1 = require(\"./SpriteSheet\");\nclass SpriteComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"SpriteComponent\";\n        this.sprite = new SpriteAnimation_1.SpriteAnimation(config.canvas, config.url, config.width, config.height, config.characterMap);\n    }\n}\nexports.SpriteComponent = SpriteComponent;\nclass StaticSpriteComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"StaticSpriteComponent\";\n        this.sprite = new SpriteSheet_1.SpriteSheet(config.canvas, config.url, config.width, config.height);\n    }\n}\nexports.StaticSpriteComponent = StaticSpriteComponent;\nclass TilesheetComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"TilesheetComponent\";\n    }\n}\nexports.TilesheetComponent = TilesheetComponent;\nclass TileComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"TileComponent\";\n        this.tilesheet = config.tilesheet;\n        this.width = config.width;\n        this.height = config.height;\n        this.x = config.x;\n        this.y = config.y;\n        this.options = config.options;\n    }\n}\nexports.TileComponent = TileComponent;\nclass PositionComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"PositionComponent\";\n        this.x = config.x;\n        this.y = config.y;\n    }\n}\nexports.PositionComponent = PositionComponent;\nclass PolygonComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"PolygonComponent\";\n        this.points = config.points;\n    }\n}\nexports.PolygonComponent = PolygonComponent;\nclass PolylineComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"PolylineComponent\";\n        this.points = config.points;\n    }\n}\nexports.PolylineComponent = PolylineComponent;\nclass RectangleComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"RectangleComponent\";\n        this.width = config.width;\n        this.height = config.height;\n        this.color = config.color;\n    }\n}\nexports.RectangleComponent = RectangleComponent;\nclass CurrentSceneComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"CurrentSceneComponent\";\n        this.scene = config.scene;\n    }\n}\nexports.CurrentSceneComponent = CurrentSceneComponent;\nclass SceneComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"SceneComponent\";\n        this.scene = config.scene;\n    }\n}\nexports.SceneComponent = SceneComponent;\nclass LoadSceneComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"LoadSceneComponent\";\n        this.scene = config.scene;\n        this.url = config.url;\n    }\n}\nexports.LoadSceneComponent = LoadSceneComponent;\nclass LevelStartComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"LevelStartComponent\";\n        this.x = config.x;\n        this.y = config.y;\n    }\n}\nexports.LevelStartComponent = LevelStartComponent;\nclass ObjectComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"ObjectComponent\";\n        this.gid = config.gid;\n        this.width = config.width;\n        this.height = config.height;\n    }\n}\nexports.ObjectComponent = ObjectComponent;\nclass SceneTilesheetComponent extends libecs_js_1.Component {\n    constructor(config) {\n        super(config);\n        this.Type = \"SceneTilesheetComponent\";\n        this.gid = config.gid;\n    }\n}\nexports.SceneTilesheetComponent = SceneTilesheetComponent;\n//# sourceMappingURL=Components.js.map","class SpriteSheet\n{\n  constructor(canvas, url, spriteWidth, spriteHeight) {\n    this.sheet = new Image();\n    this.sheet.src = url;\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (spriteX, spriteY, x, y, options = {}) => {\n    if(options.scale === undefined) options.scale = 1;\n\n    let xScale = 1, xTranslate = 0;\n    let yScale = 1, yTranslate = 0;\n    let newX = x, newY = y;\n\n    if(options.flipHorizontal === true) {\n      xScale = -1;\n      xTranslate = this.canvas.width;\n      newX = this.canvas.width - x - this.spriteWidth;\n    }\n\n    if(options.flipVertical === true) {\n      yScale = -1;\n      yTranslate = this.canvas.height;\n      newY = this.canvas.height - y - this.spriteHeight;\n    }\n\n    if(options.flipDiagonal) {\n      this.context.save();\n      this.context.translate(x, y);\n      this.context.rotate(270 * (Math.PI / 180));\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        -this.spriteWidth, 0,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n      this.context.restore();\n      return;\n    }\n\n    if(options.flipVertical || options.flipHorizontal) {\n      this.context.save();\n      this.context.translate(xTranslate, yTranslate);\n      this.context.scale(xScale, yScale);\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        newX, newY,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n      this.context.restore();\n    } else {\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        x, y,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n    }\n  }\n};\n\nexport default SpriteSheet;\n","import { System } from '@metaverse-systems/libecs-js';\nimport SpriteSheet from './SpriteSheet';\n\nclass DrawingSystem extends System\n{\n  constructor(config)\n  {\n    if(config === undefined) {\n      config = {};\n    }\n\n    super(config);\n    this.Handle = \"DrawingSystem\";\n    this.tilesheets = {};\n    this.config.camera = { x: 0, y: 0 };\n  }\n\n  Init = () => {\n    this.Container.Components[\"TilesheetComponent\"] = {};\n    this.Container.Components[\"TileComponent\"] = {};\n    this.Container.Components[\"PositionComponent\"] = {};\n    this.Container.Components[\"SpriteComponent\"] = {};\n    this.Container.Components[\"StaticSpriteComponent\"] = {};\n    this.Container.Components[\"PolygonComponent\"] = {};\n    this.Container.Components[\"PolylineComponent\"] = {};\n    this.Container.Components[\"RectangleComponent\"] = {};\n    this.Container.Components[\"CurrentSceneComponent\"] = {};\n    this.Container.Components[\"SceneComponent\"] = {};\n  }\n\n  ConfigUpdate = (config) => {\n    Object.keys(config).forEach((key) => {\n      this.config[key] = config[key];\n    });\n    if(config.width) this.config.board.width = this.config.width;\n    if(config.height) this.config.board.height = this.config.height;\n  }\n\n  ShouldDraw = (x, y, width, height) => {\n    const viewport = { left: this.config.camera.x,\n                     top: this.config.camera.y,\n                     right: (parseInt(this.config.camera.x) + parseInt(this.config.board.width)),\n                     bottom: (parseInt(this.config.camera.y) + parseInt(this.config.board.height)) };\n\n    const o = { left: x,\n              top: y,\n              right: (parseInt(x) + parseInt(width)),\n              bottom: (parseInt(y) + parseInt(height)) };\n\n    if(o.right < viewport.left) {\n      return false;\n    }\n\n    if(o.left > viewport.right) {\n      return false;\n    }\n\n    return true;\n  }\n\n  Update = () => {\n//    this.DeltaTimeGet();\n    if(this.config.board === undefined) return;\n    const ctx = this.config.board.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, this.config.board.width, this.config.board.height);\n\n    const Tilesheets = this.Container.Components[\"TilesheetComponent\"];\n    if(Tilesheets !== undefined)\n    Object.keys(Tilesheets).forEach((entity) => {\n      const tilesheet = Tilesheets[entity];\n\n      if(this.tilesheets[tilesheet.url] !== undefined) return;\n      console.log(\"Loading tilesheet\");\n      console.log(tilesheet);\n      this.tilesheets[tilesheet.url] = new SpriteSheet(this.config.board, tilesheet.url,\n                                                       tilesheet.width, tilesheet.height);\n\n      console.log(this.tilesheets);\n      this.Container.EntityDestroy(entity);\n    });\n\n    let scene = \"\";\n    const CurrentScenes = this.Container.Components[\"CurrentSceneComponent\"];\n    if(CurrentScenes !== undefined)\n    Object.keys(CurrentScenes).forEach((entity) => {\n      scene = CurrentScenes[entity].scene;\n    });\n\n    if(!scene) return;\n\n    const Scenes = this.Container.Components[\"SceneComponent\"];\n    if(Scenes !== undefined)\n    Object.keys(Scenes).forEach((entity) => {\n      if(scene !== Scenes[entity].scene) return;\n\n      const pos = this.Container.Components[\"PositionComponent\"][entity];\n      if(pos === undefined) return;\n\n      const rect = this.Container.Components[\"RectangleComponent\"][entity];\n      if(rect) {\n        ctx.beginPath();\n        ctx.fillStyle = rect.color;\n        ctx.rect(pos.x - this.config.camera.x, pos.y - this.config.camera.y, rect.width, rect.height);\n        ctx.fill();\n      }\n\n      const tile = this.Container.Components[\"TileComponent\"][entity];\n      if(tile) {\n        const sheet = this.tilesheets[tile.tilesheet];\n        if(!sheet) return;\n\n        if(this.ShouldDraw(pos.x * tile.width, pos.y * tile.height, tile.width, tile.height)) {\n          sheet.draw(tile.x, tile.y, (pos.x * tile.width) - this.config.camera.x, (pos.y * tile.height) - this.config.camera.y, tile.options);\n        }\n      }\n\n      const ssprite = this.Container.Components[\"StaticSpriteComponent\"][entity];\n      if(ssprite) {\n        if(this.ShouldDraw(pos.x, pos.y, ssprite.width, ssprite.height)) {\n          ssprite.sprite.draw(0, 0, pos.x - this.config.camera.x, pos.y - this.config.camera.y, ssprite.options);\n        }\n      }\n\n      const sprite = this.Container.Components[\"SpriteComponent\"][entity];\n      if(sprite) {\n        if(this.ShouldDraw(pos.x, pos.y, sprite.width, sprite.height)) {\n          sprite.sprite.animate(sprite.animation, sprite.direction, pos.x - this.config.camera.x, pos.y - this.config.camera.y, {});\n        }\n      }\n\n      const polygon = this.Container.Components[\"PolygonComponent\"][entity];\n      if(polygon) {\n        ctx.strokeStyle = '#0f0';\n        ctx.beginPath();\n        ctx.moveTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n        polygon.points.forEach((point) => {\n          const x = parseInt(point.x) + parseInt(pos.x) - this.config.camera.x;\n          const y = parseInt(point.y) + parseInt(pos.y) - this.config.camera.y;\n          ctx.lineTo(x, y);\n        });\n        ctx.lineTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      const polyline = this.Container.Components[\"PolylineComponent\"][entity];\n      if(polyline) {\n        ctx.strokeStyle = '#f00';\n        ctx.beginPath();\n        ctx.moveTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n        polyline.points.forEach((point) => {\n          const x = parseInt(point.x) + parseInt(pos.x) - this.config.camera.x;\n          const y = parseInt(point.y) + parseInt(pos.y) - this.config.camera.y;\n          ctx.lineTo(x, y);\n        });\n        ctx.lineTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n        ctx.closePath();\n        ctx.stroke();\n      }\n    });\n\n//    const time = this.DeltaTimeGet();\n//    console.log(\"Drawing system frame time: \" + time + \"ms\");\n  }\n}\n\nexport default DrawingSystem;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { Manager } from \"@metaverse-systems/libecs-js\";\nimport { RectangleComponent, SpriteComponent, \n         PositionComponent, CurrentSceneComponent,\n         LoadSceneComponent } from \"@metaverse-systems/tmx-map-loading-system\";\nimport DrawingSystem from \"./DrawingSystem\";\nimport TMX_MapLoadingSystem from \"@metaverse-systems/tmx-map-loading-system\";\nimport Maps from \"./maps.json\";\n\nconst ECS = new Manager();\n\n//const baseURL = \"https://raw.githubusercontent.com/hawkthorne/hawkthorne-journey/master\";\nconst baseURL = \"http://localhost\";\nconst characterBaseURL = baseURL + \"/src/characters/\";\nconst characterImagesBaseURL = baseURL + \"/src/images/characters/\";\nconst characterMapURL = baseURL + \"/src/character_map.json\";\nconst baseMusicURL = baseURL + \"/src/audio/music/\";\n\nconst characterNames = [\n  \"abed\", \"britta\", \"chang\", \"duncan\", \"garrett\", \"guzman\", \"leonard\", \"rich\", \"troy\", \"vicedean\",\n  \"annie\", \"buddy\", \"dean\", \"fatneil\", \"gilbert\", \"jeff\", \"pierce\", \"shirley\", \"vaughn\", \"vicki\"\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      music: \"\",\n      volume: 0.25,\n      map: \"test-1\",\n      animation: \"idle\",\n      direction: \"right\",\n      characterMap: {},\n      characters: {},\n      drawingSystem: new DrawingSystem({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }),\n      levelStart: { x: 0, y: 0 },\n      playerCharacter: \"annie\",\n      playerCostume: \"santa\",\n      camera: { x: 0, y: 0 }\n    };\n\n    this.world = ECS.Container();\n    this.world.System(this.state.drawingSystem);\n    this.world.Start(1000 / 15);\n    setTimeout(() => {\n        this.world.System(new TMX_MapLoadingSystem({ canvas: document.getElementById('board'), tilesheetBaseURL:  baseURL + \"/src/\" }));\n    }, 500);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.keyDown);\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.keyDown);\n\n    this.handleResize();\n/*\n    fetch(characterMapURL)\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({ characterMap: data }, () => {\n        this.loadMap();\n      });\n    });\n\n    characterNames.forEach((name) => {\n      let cURL = characterBaseURL + name + \".json\";\n      fetch(cURL)\n      .then((response) => response.json())\n      .then((data) => {\n        let characters = Object.assign({}, this.state.characters);\n        characters[name] = data;\n        this.setState({ characters: characters });\n      });\n    });\n*/\n    this.loadMap();\n  }\n\n  handleResize = () => {\n//    const width = window.innerWidth;\n//    const height = window.innerHeight;\n    const width = 1600;\n    const height = 1600;\n\n    if(this.state.drawingSystem !== null) {\n      this.state.drawingSystem.ConfigUpdate({ height: height, width: width, board: document.getElementById('board') });\n    }\n  }\n\n  setMusic = (track) => {\n    if(track === undefined) {\n      track = \"level\";\n    }\n\n    let soundtrackURL = \"\";\n    if(track.search(\"ogg\") !== -1) {\n      soundtrackURL = baseURL + \"/src/\" + track;\n    } else {\n      soundtrackURL = baseMusicURL + track + \".ogg\";\n    }\n\n    this.setState({ music: soundtrackURL }, () => {\n      document.getElementById('rap').play();\n    });\n  }\n\n  loadMap = () => {\n    const mapURL = baseURL + \"/src/maps/\" + this.state.map + \".tmx\";\n    let e;\n\n    const CurrentScenes = this.world.Components[\"CurrentSceneComponent\"];\n    if(CurrentScenes !== undefined) {\n      Object.keys(CurrentScenes).forEach((entity) => {\n        e = this.world.Entity(entity);\n      });\n    }\n\n    if(!e) e = this.world.Entity();\n    e.Component(new CurrentSceneComponent({ scene: this.state.map }));\n\n    e = this.world.Entity();\n    e.Component(new LoadSceneComponent({ scene: this.state.map, url: mapURL }));\n  }\n\n  moveCamera = (x, y) => {\n    this.setState({ camera: { x: x, y: y } }, () => {\n      this.state.drawingSystem.ConfigUpdate({ camera: this.state.camera });\n    });\n  }\n\n  centerCamera = () => {\n    const pos = this.world.Components[\"PositionComponent\"][\"player\"];\n    const width = this.state.drawingSystem.config.width;\n\n    const rightTrigger = this.state.camera.x + (width * .75);\n    if(pos.x > rightTrigger) {\n      this.moveCamera(this.state.camera.x + 5, this.state.camera.y);\n      return;\n    }\n\n    const leftTrigger = this.state.camera.x + (width *.25);\n    if(pos.x < leftTrigger) {\n      let newX = this.state.camera.x - 5;\n      if(newX < 0) newX = 0;\n      this.moveCamera(newX, this.state.camera.y);\n      return;\n    }\n  }\n\n  setBackgroundColor = (map) => {\n    const e = this.world.Entity();\n    e.Component(new PositionComponent({ x: 0, y: 0 }));\n\n    const backgroundWidth = map.width * map.tileWidth;\n    const backgroundHeight = map.height * map.tileHeight;\n    const color = \"#\" + parseInt(map.properties.red).toString(16)\n                      + parseInt(map.properties.green).toString(16)\n                      + parseInt(map.properties.blue).toString(16);\n\n    e.Component(new RectangleComponent({ width: backgroundWidth, height: backgroundHeight, color: color }));\n  }\n\n  setMusic = (track) => {\n    if(track === undefined) {\n      track = \"level\";\n    }\n\n    let soundtrackURL = \"\";\n    if(track.search(\"ogg\") !== -1) {\n      soundtrackURL = baseURL + \"/src/\" + track;\n    } else {\n      soundtrackURL = baseMusicURL + track + \".ogg\";\n    }\n\n    this.setState({ music: soundtrackURL }, () => {\n      document.getElementById('rap').play();\n    });\n  }\n\n  initializePlayer = (pos) => {\n    let canvas = document.getElementById('board');\n    let spriteURL = characterImagesBaseURL + this.state.playerCharacter + \"/\" + this.state.playerCostume + \".png\";\n\n    let e = this.world.Entity(\"player\");\n    if(pos !== undefined) e.Component(new PositionComponent(pos));\n    else e.Component(new PositionComponent(this.state.levelStart));\n    e.Component(new SpriteComponent({ canvas: canvas, url: spriteURL, width: 48, height: 48,\n      characterMap: this.state.characterMap, animation: this.state.animation, direction: this.state.direction }));\n  }\n\n  changeAnimation = (e) => {\n    this.setState({ animation: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  changeDirection = (e) => {\n    this.setState({ direction: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  updateSpriteComponent = () => {\n    Object.keys(this.world.Components[\"SpriteComponent\"]).forEach((entity) => {\n      this.world.Components[\"SpriteComponent\"][entity].animation = this.state.animation;\n      this.world.Components[\"SpriteComponent\"][entity].direction = this.state.direction;\n    });\n  }\n\n  destroyMap = () => {\n    Object.keys(this.world.Components[\"TileComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    Object.keys(this.world.Components[\"StaticSpriteComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    Object.keys(this.world.Components[\"PolygonComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    if(this.world.Components[\"PolylineComponent\"] !== undefined)\n    Object.keys(this.world.Components[\"PolylineComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    if(this.world.Components[\"RectangleComponent\"] !== undefined)\n    Object.keys(this.world.Components[\"RectangleComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n  }\n\n  changeMap = (e) => {\n//    this.destroyMap();\n    this.setState({ map: e.target.value }, () => {\n      this.loadMap();\n    });\n  }\n\n  volume = (e) => {\n    this.setState({ volume: e.target.volume });\n  }\n\n  keyDown = (e) => {\n    let newPos = { x: 0, y: 0 };\n    switch(e.key) {\n      case 'd':\n      case 'D':\n        newPos.x = 5;\n        this.setState({ direction: \"right\" });\n        break;\n      case 'a':\n      case 'A':\n        newPos.x = -5;\n        this.setState({ direction: \"left\" });\n        break;\n      default:\n        break;\n    }\n\n    if(newPos.x || newPos.y) {\n      let pos = this.world.Components[\"PositionComponent\"][\"player\"];\n      newPos.x += pos.x;\n      newPos.y += pos.y;\n      this.initializePlayer(newPos);\n      this.centerCamera();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"board\" width=\"1600\" height=\"1600\" />\n        <div style={ {float: 'right'} }>\n          <label htmlFor=\"map\">Choose map:</label>\n          <br />\n          <select id=\"map\" defaultValue={this.state.map} onChange={this.changeMap}>\n            {Maps.map((m, i) => {\n              return <option key={i}>{m}</option>\n            })}\n          </select>\n          <br />\n          <br />\n          <label htmlFor=\"animation\">Choose animation:</label>\n          <br />\n          <select id=\"animation\" defaultValue={this.state.animation} onChange={this.changeAnimation}>\n            {Object.keys(this.state.characterMap).map((a, i) => <option key={i}>{a}</option>)}\n          </select>\n          <br />\n          <br />\n          <label htmlFor=\"direction\">Choose direction:</label>\n          <br />\n          <select id=\"direction\" defaultValue={this.state.direction} onChange={this.changeDirection}>\n            <option value=\"left\">Left</option>\n            <option value=\"right\">Right</option>\n          </select>\n          <br />\n          <br />\n          <ReactAudioPlayer id=\"rap\"\n            src={this.state.music}\n            loop={true}\n            controls={true}\n            onVolumeChanged={this.volume}\n            volume={this.state.volume}\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}