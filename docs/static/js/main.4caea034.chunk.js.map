{"version":3,"sources":["SpriteSheet.js","SpriteAnimation.js","Components.js","DrawingSystem.js","tmx2json.js","App.js","reportWebVitals.js","index.js"],"names":["SpriteSheet","canvas","url","spriteWidth","spriteHeight","draw","spriteX","spriteY","x","y","options","undefined","scale","xScale","xTranslate","yScale","yTranslate","newX","newY","flipHorizontal","width","flipVertical","height","flipDiagonal","context","save","translate","rotate","Math","PI","drawImage","sheet","restore","this","Image","src","getContext","SpriteAnimation","characterMap","animate","animation","direction","restart","frame","loop","charMap","animations","Array","isArray","repeat","forEach","e","split","search","startX","endX","i","push","length","SpriteComponent","config","sprite","Type","Component","StaticSpriteComponent","TilesheetComponent","TileComponent","tilesheet","PositionComponent","PolygonComponent","points","DrawingSystem","ConfigUpdate","Object","keys","key","Update","board","ctx","clearRect","Container","Components","entity","tilesheets","tile","pos","poly","start","fillStyle","beginPath","moveTo","point","lineTo","closePath","stroke","Handle","System","pako","require","ObjectGroup","xml","attributes","name","value","textContent","objects","childNodes","nodeName","TMX_Object","console","log","polygon","Polygon","properties","ObjectProperties","temp","Properties","attr","j","Tileset","image","TMX_Image","Layer","tiles","TMX_Data","compressedData","atob","innerHTML","data","inflate","id","tmx2json","fetch","then","response","text","tmx_map","DOMParser","parseFromString","getElementsByTagName","tilesets","layers","objectgroups","ECS","Manager","baseURL","characterNames","App","props","componentDidMount","handleResize","json","setState","initializeMap","initializeCharacters","characters","assign","state","window","innerWidth","innerHeight","drawingSystem","document","getElementById","t","map","setTimeout","soundtrack","track","music","play","pause","layer","buildLayer","group","o","buildObject","world","Export","c","spriteURL","characterImagesBaseURL","Entity","Start","type","buildPolygon","buildSprite","flip","tileset","source","tileWidth","tilewidth","tileHeight","tileheight","tilesheetCols","maxCols","maxRows","index","tileId","tX","tY","changeAnimation","target","updateSpriteComponent","changeDirection","destroyMap","destroy","changeMap","style","float","htmlFor","defaultValue","onChange","Maps","m","a","controls","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4caea034.chunk.js","sourcesContent":["class SpriteSheet\n{\n  constructor(canvas, url, spriteWidth, spriteHeight) {\n    this.sheet = new Image();\n    this.sheet.src = url;\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (spriteX, spriteY, x, y, options = {}) => {\n    if(options.scale === undefined) options.scale = 1;\n\n    let xScale = 1, xTranslate = 0;\n    let yScale = 1, yTranslate = 0;\n    let newX = x, newY = y;\n\n    if(options.flipHorizontal === true) {\n      xScale = -1;\n      xTranslate = this.canvas.width;\n      newX = this.canvas.width - x - this.spriteWidth;\n    }\n\n    if(options.flipVertical === true) {\n      yScale = -1;\n      yTranslate = this.canvas.height;\n      newY = this.canvas.height - y - this.spriteHeight;\n    }\n\n    if(options.flipDiagonal) {\n      this.context.save();\n      this.context.translate(x, y);\n      this.context.rotate(270 * (Math.PI / 180));\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        -this.spriteWidth, 0,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n      this.context.restore();\n      return;\n    }\n\n    if(options.flipVertical || options.flipHorizontal) {\n      this.context.save();\n      this.context.translate(xTranslate, yTranslate);\n      this.context.scale(xScale, yScale);\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        newX, newY,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n      this.context.restore();\n    } else {\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        x, y,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n    }\n  }\n};\n\nexport default SpriteSheet;\n","import SpriteSheet from './SpriteSheet';\n\nclass SpriteAnimation\n{\n  constructor(canvas, url, spriteWidth, spriteHeight, characterMap) {\n    this.sheet = new SpriteSheet(canvas, url, spriteWidth, spriteHeight);\n    this.frame = 0;\n    this.animation = \"\";\n    this.direction = \"\";\n    this.repeat = \"\";\n    this.loop = [];\n    this.characterMap = characterMap;\n  }\n\n  animate = (animation, direction, x, y, scale) => {\n    let restart = false;\n\n    if(this.animation !== animation) {\n      this.animation = animation;\n      restart = true;\n    }\n\n    if(this.direction !== direction) {\n      this.direction = direction;\n      restart = true;\n    }\n\n    if(restart) {\n      this.frame = 0;\n      this.loop = [];\n\n      let charMap = this.characterMap[animation];\n      let animations = [];\n      if(Array.isArray(charMap)) {\n        // No direction\n        this.repeat = charMap[0];\n        animations = charMap[1];\n      } else {\n        this.repeat = charMap[direction][0];\n        animations = charMap[direction][1];\n      }\n\n      animations.forEach((e) => {\n        // subtracting 1 because character_map.json uses 1-based indexing\n\n        let [x, y] = e.split(\",\");\n        if(x.search(\"-\") !== -1) {\n          // multiple x coords in one entry, split them up\n          let [startX, endX] = x.split(\"-\");\n          for(let i = startX; i <= endX; i++) {\n            this.loop.push({ x: (i - 1), y: (y - 1) });\n          }\n        } else {\n          this.loop.push({ x: (x - 1), y: (y - 1) });\n        }\n      });\n    }\n\n    this.draw(x, y, scale);\n  }\n\n  /*\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (x, y, scale) => {\n    if(this.loop.length === 0) return;\n\n    this.sheet.draw(this.loop[this.frame].x, this.loop[this.frame].y, x, y, scale);\n    this.frame++;\n\n    if(this.frame === this.loop.length) this.frame = 0;\n  }\n};\n\nexport default SpriteAnimation;\n","import { Component } from \"@metaverse-systems/libecs-js\";\nimport SpriteAnimation from \"./SpriteAnimation\";\nimport SpriteSheet from \"./SpriteSheet\";\n\nclass SpriteComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.sprite = new SpriteAnimation(config.canvas, config.url, config.width, config.height, config.characterMap);\n    this.Type = \"SpriteComponent\";\n  }\n}\n\nclass StaticSpriteComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.sprite = new SpriteSheet(config.canvas, config.url, config.width, config.height);\n    this.Type = \"StaticSpriteComponent\";\n  }\n}\n\nclass TilesheetComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.Type = \"TilesheetComponent\";\n  }\n}\n\nclass TileComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.tilesheet = config.tilesheet;\n    this.width = config.width;\n    this.height = config.height;\n    this.x = config.x;\n    this.y = config.y;\n    this.options = config.options;\n    this.Type = \"TileComponent\";\n  }\n}\n\nclass PositionComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.x = config.x;\n    this.y = config.y;\n    this.Type = \"PositionComponent\";\n  }\n}\n\nclass PolygonComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.points = config.points;\n    this.Type = \"PolygonComponent\";\n  }\n}\n\nexport {\n  SpriteComponent,\n  StaticSpriteComponent,\n  PositionComponent,\n  TileComponent,\n  TilesheetComponent,\n  PolygonComponent\n};\n","import { System } from '@metaverse-systems/libecs-js';\nimport SpriteSheet from './SpriteSheet';\n\nclass DrawingSystem extends System\n{\n  constructor(config)\n  {\n    if(config === undefined) {\n      config = {};\n    }\n\n    super(config);\n    this.Handle = \"DrawingSystem\";\n    this.tilesheets = {};\n  }\n\n  ConfigUpdate = (config) => {\n    Object.keys(config).forEach((key) => {\n      this.config[key] = config[key];\n    });\n  }\n\n  Update = () => {\n    if(this.config.board === undefined) return;\n    let ctx = this.config.board.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, this.config.board.width, this.config.board.height);\n\n    if(this.Container.Components[\"TilesheetComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"TilesheetComponent\"]).forEach((entity) => {\n      let tilesheet = this.Container.Components[\"TilesheetComponent\"][entity];\n\n      if(this.tilesheets[tilesheet.url] !== undefined) return;\n      this.tilesheets[tilesheet.url] = new SpriteSheet(this.config.board, tilesheet.url, \n                                                       tilesheet.width, tilesheet.height); \n    });\n\n    if(this.Container.Components[\"TileComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"TileComponent\"]).forEach((entity) => {\n      let tile = this.Container.Components[\"TileComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n      let sheet = this.tilesheets[tile.tilesheet];\n\n      sheet.draw(tile.x, tile.y, pos.x * tile.width, pos.y * tile.height, tile.options);\n    });\n\n    if(this.Container.Components[\"StaticSpriteComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"StaticSpriteComponent\"]).forEach((entity) => {\n      let sprite = this.Container.Components[\"StaticSpriteComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      if(sprite.sprite) {\n        sprite.sprite.draw(0, 0, pos.x, pos.y, sprite.options);\n      }\n    });\n\n    if(this.Container.Components[\"SpriteComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"SpriteComponent\"]).forEach((entity) => {\n      let sprite = this.Container.Components[\"SpriteComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      if(sprite.sprite) {\n        sprite.sprite.animate(sprite.animation, sprite.direction, pos.x, pos.y, {});\n      }\n    });\n\n    if(this.Container.Components[\"PolygonComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"PolygonComponent\"]).forEach((entity) => {\n      let poly = this.Container.Components[\"PolygonComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      let start = poly.points[0];\n      ctx.fillStyle = '#f00';\n      ctx.beginPath();\n      ctx.moveTo(start.x + pos.x, start.y + pos.y);\n      poly.points.forEach((point) => {\n        ctx.lineTo(point.x + pos.x, point.y + pos.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n    });\n  }\n}\n\nexport default DrawingSystem;\n","const pako = require('pako');\n\nclass tmx2json\n{\n  constructor(url) {\n    fetch(url)\n    .then((response) => response.text())\n    .then((data) => {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(data, \"text/xml\");\n      const tmx_map = xmlDoc.getElementsByTagName(\"map\")[0];\n      for(let i = 0; i < tmx_map.attributes.length; i++) {\n        let name = tmx_map.attributes[i].name;\n        let value = tmx_map.attributes[i].textContent;\n\n        if(name === \"version\") continue;\n        this[name] = value;\n      }\n\n      this.tilesets = [];\n      this.layers = [];\n      this.objectgroups = [];\n\n      for(let i = 0; i < tmx_map.childNodes.length; i++) {\n        let nodeName = tmx_map.childNodes[i].nodeName;\n        switch(nodeName)\n        {\n          case \"properties\":\n            this.properties = new ObjectProperties(tmx_map.childNodes[i]);\n            break;\n          case \"tileset\":\n            this.tilesets.push(new Tileset(tmx_map.childNodes[i]));\n            break;\n          case \"layer\":\n            this.layers.push(new Layer(tmx_map.childNodes[i]));\n            break;\n          case \"objectgroup\":\n            this.objectgroups.push(new ObjectGroup(tmx_map.childNodes[i]));\n            break;\n          case \"#text\":\n            break;\n          default:\n            console.log(\"Unknown node \" + nodeName);\n            break;\n        }\n      }\n    });\n  }\n}\n\nclass ObjectGroup\n{\n  constructor(xml) {\n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n\n      this[name] = value;\n    }\n\n    this.objects = [];\n    for(let i = 0; i < xml.childNodes.length; i++) {\n      let nodeName = xml.childNodes[i].nodeName;\n      switch(nodeName)\n      {\n        case \"object\":\n          this.objects.push(new TMX_Object(xml.childNodes[i]));\n          break;\n        case \"#text\":\n          break;\n        default:\n          console.log(\"ObjectGroup: Unknown node \" + nodeName);\n          break;\n      }\n    }\n  }\n}\n\nclass TMX_Object\n{\n  constructor(xml) { \n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n\n      this[name] = value;\n    }\n\n    for(let i = 0; i < xml.childNodes.length; i++) {\n      let nodeName = xml.childNodes[i].nodeName;\n      switch(nodeName)\n      {\n        case \"polygon\":\n          this.polygon = new Polygon(xml.childNodes[i]);\n          break;\n        case \"properties\":\n          this.properties = new ObjectProperties(xml.childNodes[i]);\n          break;\n        case \"#text\":\n          break;\n        default:\n          console.log(\"TMX_Object: Unknown node \" + nodeName);\n          break;\n      }\n    }\n  }\n}\n\nclass Polygon\n{\n  constructor(xml) {\n    this.points = [];\n    let temp = {};\n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n      temp[name] = value;\n    }\n\n    if(temp[\"points\"] === undefined) return;\n\n    let points = temp[\"points\"].split(\" \");\n    points.forEach((point) => {\n      let [x, y] = point.split(\",\");\n      this.points.push({ x: x - 0, y: y - 0 });\n    });\n  }\n}\n\nclass Properties\n{\n  constructor(xml) {\n    for(let i = 0; i < xml.childNodes.length; i++) {\n      let nodeName = xml.childNodes[i].nodeName;\n      switch(nodeName)\n      {\n        case \"property\":\n          let attr = xml.childNodes[i].attributes;\n          for(let j = 0; j < attr.length; j++) {\n            let name = attr[j].name;\n            let value = attr[j].textContent;\n            this[name] = value;\n          }\n          break;\n        case \"#text\":\n          break;\n        default:\n          console.log(\"Unknown node \" + nodeName);\n          break;\n      }\n    }\n  }\n}\n\nclass ObjectProperties\n{\n  constructor(xml) {\n    for(let i = 0; i < xml.childNodes.length; i++) {\n      let nodeName = xml.childNodes[i].nodeName;\n      switch(nodeName)\n      {\n        case \"property\":\n          let attr = xml.childNodes[i].attributes;\n          let name = \"\";\n          let value = \"\";\n          for(let j = 0; j < attr.length; j++) {\n            if(attr[j].name === \"name\") {\n              name = attr[j].textContent;\n            }\n            if(attr[j].name === \"value\") {\n              value = attr[j].textContent;\n            }\n          }\n          this[name] = value;\n          break;\n        case \"#text\":\n          break;\n        default:\n          console.log(\"Unknown node \" + nodeName);\n          break;\n      }\n    }\n  }\n}\n\nclass Tileset\n{\n  constructor(xml) {\n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n\n      this[name] = value;\n    }\n\n    for(let i = 0; i < xml.childNodes.length; i++) {\n      let nodeName = xml.childNodes[i].nodeName;\n      switch(nodeName)\n      {\n        case \"properties\":\n          this.properties = new Properties(xml.childNodes[i]);\n          break;\n        case \"image\":\n          this.image = new TMX_Image(xml.childNodes[i]);\n          break;\n        case \"#text\":\n          break;\n        default:\n          console.log(\"Tileset: Unknown node \" + nodeName);\n          break;\n      }\n    }\n  }\n}\n\nclass Layer\n{\n  constructor(xml) {\n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n\n      this[name] = value;\n    }\n\n    for(let i = 0; i < xml.childNodes.length; i++) {\n      let nodeName = xml.childNodes[i].nodeName;\n      switch(nodeName)\n      {\n        case \"#text\":\n          break;\n        case \"data\":\n          this.tiles = new TMX_Data(xml.childNodes[i]).tiles;\n          break;\n        case \"properties\":\n          this.properties = new Properties(xml.childNodes[i]);\n          break;\n        default:\n          console.log(\"Layer: Unknown node \" + nodeName);\n          break;\n      }\n    }\n  }\n}\n\nclass TMX_Data\n{\n  constructor(xml) { \n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n\n      this[name] = value;\n    }\n\n    let compressedData = atob(xml.innerHTML);\n    let data = pako.inflate(compressedData);\n\n    this.tiles = [];\n\n    for(let i = 0; i < data.length; i += 4) {\n      let value = (data[i + 3] << 24)\n                + (data[i + 2] << 16)\n                + (data[i + 1] << 8)\n                + data[i + 0];\n\n      let tile = {};\n      if(value & 0x80000000) {\n        tile.flipHorizontal = true;\n        value ^= 0x80000000;\n      }\n\n      if(value & 0x40000000) {\n        tile.flipVertical = true;\n        value ^= 0x40000000;\n      } \n\n      if(value & 0x20000000) {\n        tile.flipDiagonal = true;\n        value ^= 0x20000000;\n      }\n      tile.id = value - 1;\n      \n      this.tiles.push(tile);\n    }\n  }\n}\n\nclass TMX_Image\n{\n  constructor(xml) {\n    for(let i = 0; i < xml.attributes.length; i++) {\n      let name = xml.attributes[i].name;\n      let value = xml.attributes[i].textContent;\n\n      this[name] = value;\n    }\n  }\n}\n\nexport default tmx2json;\n","import React, { Component } from \"react\";\nimport './App.css';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Manager } from \"@metaverse-systems/libecs-js\";\nimport { SpriteComponent, StaticSpriteComponent, PositionComponent, TileComponent, TilesheetComponent, PolygonComponent } from \"./Components\";\nimport DrawingSystem from \"./DrawingSystem\";\nimport tmx2json from \"./tmx2json\";\nimport Maps from \"./maps.json\";\n\nconst ECS = new Manager();\n\nconst baseURL = \"https://raw.githubusercontent.com/hawkthorne/hawkthorne-journey/master\";\nconst characterBaseURL = baseURL + \"/src/characters/\";\nconst characterImagesBaseURL = baseURL + \"/src/images/characters/\";\nconst characterMapURL = baseURL + \"/src/character_map.json\";\nconst baseMusicURL = baseURL + \"/src/audio/music/\";\n\n\nconst characterNames = [\n  \"abed\", \"britta\", \"chang\", \"duncan\", \"garrett\", \"guzman\", \"leonard\", \"rich\", \"troy\", \"vicedean\",\n  \"annie\", \"buddy\", \"dean\", \"fatneil\", \"gilbert\", \"jeff\", \"pierce\", \"shirley\", \"vaughn\", \"vicki\"\n];\n\nconst costume = \"base\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      music: \"\",\n      map: \"studyroom\",\n      animation: \"dance\",\n      direction: \"right\",\n      characterMap: {},\n      characters: {},\n      drawingSystem: new DrawingSystem({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    };\n\n    this.world = ECS.Container();\n    this.world.System(this.state.drawingSystem);\n  }\n\n  componentDidMount = () => {\n    this.handleResize();\n    fetch(characterMapURL)\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({ characterMap: data }, () => {\n        this.initializeMap();\n        this.initializeCharacters();\n      });\n    });\n\n    characterNames.forEach((name) => {\n      let cURL = characterBaseURL + name + \".json\";\n      fetch(cURL)\n      .then((response) => response.json())\n      .then((data) => {\n        let characters = Object.assign({}, this.state.characters);\n        characters[name] = data;\n        this.setState({ characters: characters });\n      });\n    });\n  }\n\n  handleResize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    if(this.state.drawingSystem !== null) {\n      this.state.drawingSystem.ConfigUpdate({ height: height, width: width, board: document.getElementById('board') });\n    }\n  }\n\n  initializeMap = () => {\n    let t = new tmx2json(baseURL + \"/src/maps/\" + this.state.map + \".tmx\");\n\n    setTimeout(() => {\n      if(t.properties.soundtrack !== undefined) {\n        let track = t.properties.soundtrack;\n        let url = \"\";\n        if(track.search(\"ogg\") !== -1) {\n          url = baseURL + \"/src/\" + track;\n        } else {\n          url = baseMusicURL + t.properties.soundtrack + \".ogg\";\n        }\n        this.setState({ music: url });\n        document.getElementById('rap').play();\n      } else {\n        document.getElementById('rap').pause();\n        this.setState({ music: \"\" });\n      }\n\n      t.layers.forEach((layer) => {\n        this.buildLayer(layer, t.tilesets[0]);\n      });\n\n      t.objectgroups.forEach((group) => {\n        group.objects.forEach((o) => {\n          this.buildObject(o);\n        });\n      });\n\n      console.log(this.world.Export());\n    }, 500);\n  }\n\n  initializeCharacters = () => {\n    let canvas = document.getElementById('board');\n    let x = 0;\n    let y = 400;\n\n    characterNames.forEach((c) => {\n      let spriteURL = characterImagesBaseURL + c + \"/\" + costume + \".png\";\n      let e = this.world.Entity();\n      e.Component(new PositionComponent({ x: x, y: y }));\n      e.Component(new SpriteComponent({ canvas: canvas, url: spriteURL, width: 48, height: 48, \n        characterMap: this.state.characterMap, animation: this.state.animation, direction: this.state.direction }));\n\n      x += 50;\n      if(x > 450) {\n        x = 0;\n        y += 50;\n      }\n    });\n\n    this.world.Start(250);\n  }\n\n  buildObject = (o) => {\n    if(o.type === \"sprite\") {\n      this.buildSprite(o);\n      return;\n    }\n\n    if(o.polygon !== undefined) {\n      this.buildPolygon(o);\n      return;\n    }\n  }\n\n  buildPolygon = (o) => {\n    let e = this.world.Entity();\n    e.Component(new PositionComponent({ x: o.x, y: o.y }));\n    e.Component(new PolygonComponent({ points: o.polygon.points }));\n  }\n\n  buildSprite = (o) => {\n    let url = baseURL + \"/src/\" + o.properties.sheet;\n\n    let e = this.world.Entity();\n    e.Component(new PositionComponent({ x: o.x, y: o.y }));\n\n    let options = { flipHorizontal: o.properties.flip === \"true\" ? true : false };\n    e.Component(new StaticSpriteComponent({ canvas: document.getElementById('board'), url: url, width: o.properties.width,\n                                            height: o.properties.height, x: o.x, y: o.y, options: options }));\n  }\n\n  buildLayer = (layer, tileset) => {\n    let tilesheet = baseURL + \"/src/images/\" + tileset.image.source;\n    let tileWidth = tileset.tilewidth;\n    let tileHeight = tileset.tileheight;\n    let tilesheetCols = tileset.image.width / tileWidth;\n\n    let e = this.world.Entity();\n    e.Component(new TilesheetComponent({ url: tilesheet, width: tileWidth, height: tileHeight }));\n\n    let maxCols = layer.width;\n    let maxRows = layer.height;\n\n    let index = 0;\n    for(let y = 0; y < maxRows; y++)\n    {\n      for(let x = 0; x < maxCols; x++)\n      {\n        let tileId = layer.tiles[index].id;\n        if(tileId === -1)\n        {\n            index++;\n            continue;\n        }\n\n        let tX = tileId % tilesheetCols;\n        let tY = (tileId - tX) / tilesheetCols;\n\n        let options = {};\n        if(layer.tiles[index].flipHorizontal === true) {\n          options.flipHorizontal = true;\n        }\n        if(layer.tiles[index].flipVertical === true) {\n          options.flipVertical = true;\n        }\n        if(layer.tiles[index].flipDiagonal === true) {\n          options.flipDiagonal = true;\n        }\n        e = this.world.Entity();\n        e.Component(new PositionComponent({ x: x, y: y }));\n        e.Component(new TileComponent({ tilesheet: tilesheet, width: tileWidth, height: tileHeight, x: tX, y: tY, options: options }));\n\n        index++;\n      }\n    }\n  }\n\n  changeAnimation = (e) => {\n    this.setState({ animation: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  changeDirection = (e) => {\n    this.setState({ direction: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  updateSpriteComponent = () => {\n    Object.keys(this.world.Components[\"SpriteComponent\"]).forEach((entity) => {\n      this.world.Components[\"SpriteComponent\"][entity].animation = this.state.animation;\n      this.world.Components[\"SpriteComponent\"][entity].direction = this.state.direction;\n    });\n  }\n\n  destroyMap = () => {\n    Object.keys(this.world.Components[\"TileComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    Object.keys(this.world.Components[\"StaticSpriteComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    Object.keys(this.world.Components[\"PolygonComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n  }\n\n  changeMap = (e) => {\n    this.destroyMap();\n    this.setState({ map: e.target.value }, () => {\n      this.initializeMap();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"board\" width=\"1280\" height=\"720\" />\n        <div style={ {float: 'right'} }>\n          <label htmlFor=\"map\">Choose map:</label>\n          <br />\n          <select id=\"map\" defaultValue={this.state.map} onChange={this.changeMap}>\n            {Maps.map((m, i) => {\n              return <option key={i}>{m}</option>\n            })}\n          </select>\n          <br />\n          <br />\n          <label htmlFor=\"animation\">Choose animation:</label>\n          <br />\n          <select id=\"animation\" defaultValue={this.state.animation} onChange={this.changeAnimation}>\n            {Object.keys(this.state.characterMap).map((a, i) => {\n              return <option key={i}>{a}</option>\n            })}\n          </select>\n          <br />\n          <br />\n          <label htmlFor=\"direction\">Choose direction:</label>\n          <br />\n          <select id=\"direction\" defaultValue={this.state.direction} onChange={this.changeDirection}>\n            <option value=\"left\">Left</option>\n            <option value=\"right\">Right</option>\n          </select>\n          <br />\n          <br />\n          <ReactAudioPlayer id=\"rap\"\n            src={this.state.music}\n            loop={true}\n            controls={true}\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}