{"version":3,"sources":["SpriteSheet.js","SpriteAnimation.js","Components.js","DrawingSystem.js","App.js","reportWebVitals.js","index.js"],"names":["SpriteSheet","canvas","url","spriteWidth","spriteHeight","draw","spriteX","spriteY","x","y","options","undefined","scale","xScale","xTranslate","yScale","yTranslate","newX","newY","flipHorizontal","width","flipVertical","height","flipDiagonal","context","save","translate","rotate","Math","PI","drawImage","sheet","restore","this","Image","src","getContext","SpriteAnimation","characterMap","animate","animation","direction","restart","frame","loop","charMap","animations","Array","isArray","repeat","forEach","e","split","search","startX","endX","i","push","length","SpriteComponent","config","sprite","Type","Component","StaticSpriteComponent","TilesheetComponent","TileComponent","tilesheet","PositionComponent","PolygonComponent","points","PolylineComponent","RectangleComponent","color","DrawingSystem","Init","Container","Components","ConfigUpdate","Object","keys","key","board","ShouldDraw","viewport","camera","parseInt","o","Update","ctx","clearRect","entity","rect","pos","beginPath","fillStyle","fill","tilesheets","Entity","destroy","tile","poly","strokeStyle","moveTo","point","lineTo","closePath","stroke","Handle","System","ECS","Manager","baseURL","baseMusicURL","characterNames","App","props","componentWillUnmount","document","removeEventListener","keyDown","componentDidMount","addEventListener","handleResize","fetch","then","response","json","data","setState","initializeMap","name","characters","assign","state","window","innerWidth","innerHeight","drawingSystem","getElementById","setBackgroundColor","map","world","backgroundWidth","tileWidth","backgroundHeight","tileHeight","properties","red","toString","green","blue","setMusic","track","soundtrackURL","music","play","mapURL","text","tmx","parse","err","soundtrack","layers","layer","type","buildTileLayer","buildObjectLayer","console","log","moveCamera","centerCamera","rightTrigger","leftTrigger","initializePlayer","spriteURL","playerCharacter","playerCostume","levelStart","objects","buildObject","polygon","polyline","buildPolyline","buildPolygon","buildSprite","flip","tileSet","tileSets","tilesheetURL","image","source","tilesheetCols","maxCols","maxRows","index","tiles","tileId","id","tX","tY","horizontalFlips","verticalFlips","diagonalFlips","changeAnimation","target","value","updateSpriteComponent","changeDirection","destroyMap","changeMap","volume","newPos","Start","style","float","htmlFor","defaultValue","onChange","Maps","m","a","controls","onVolumeChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e193178c.chunk.js","sourcesContent":["class SpriteSheet\n{\n  constructor(canvas, url, spriteWidth, spriteHeight) {\n    this.sheet = new Image();\n    this.sheet.src = url;\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (spriteX, spriteY, x, y, options = {}) => {\n    if(options.scale === undefined) options.scale = 1;\n\n    let xScale = 1, xTranslate = 0;\n    let yScale = 1, yTranslate = 0;\n    let newX = x, newY = y;\n\n    if(options.flipHorizontal === true) {\n      xScale = -1;\n      xTranslate = this.canvas.width;\n      newX = this.canvas.width - x - this.spriteWidth;\n    }\n\n    if(options.flipVertical === true) {\n      yScale = -1;\n      yTranslate = this.canvas.height;\n      newY = this.canvas.height - y - this.spriteHeight;\n    }\n\n    if(options.flipDiagonal) {\n      this.context.save();\n      this.context.translate(x, y);\n      this.context.rotate(270 * (Math.PI / 180));\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        -this.spriteWidth, 0,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n      this.context.restore();\n      return;\n    }\n\n    if(options.flipVertical || options.flipHorizontal) {\n      this.context.save();\n      this.context.translate(xTranslate, yTranslate);\n      this.context.scale(xScale, yScale);\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        newX, newY,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n      this.context.restore();\n    } else {\n      this.context.drawImage(this.sheet,\n        (spriteX * this.spriteWidth), (spriteY * this.spriteHeight),\n        this.spriteWidth, this.spriteHeight,\n        x, y,\n        this.spriteWidth * options.scale, this.spriteHeight * options.scale\n      );\n    }\n  }\n};\n\nexport default SpriteSheet;\n","import SpriteSheet from './SpriteSheet';\n\nclass SpriteAnimation\n{\n  constructor(canvas, url, spriteWidth, spriteHeight, characterMap) {\n    this.sheet = new SpriteSheet(canvas, url, spriteWidth, spriteHeight);\n    this.frame = 0;\n    this.animation = \"\";\n    this.direction = \"\";\n    this.repeat = \"\";\n    this.loop = [];\n    this.characterMap = characterMap;\n  }\n\n  animate = (animation, direction, x, y, scale) => {\n    let restart = false;\n\n    if(this.animation !== animation) {\n      this.animation = animation;\n      restart = true;\n    }\n\n    if(this.direction !== direction) {\n      this.direction = direction;\n      restart = true;\n    }\n\n    if(restart) {\n      this.frame = 0;\n      this.loop = [];\n\n      let charMap = this.characterMap[animation];\n      let animations = [];\n      if(Array.isArray(charMap)) {\n        // No direction\n        this.repeat = charMap[0];\n        animations = charMap[1];\n      } else {\n        this.repeat = charMap[direction][0];\n        animations = charMap[direction][1];\n      }\n\n      animations.forEach((e) => {\n        // subtracting 1 because character_map.json uses 1-based indexing\n\n        let [x, y] = e.split(\",\");\n        if(x.search(\"-\") !== -1) {\n          // multiple x coords in one entry, split them up\n          let [startX, endX] = x.split(\"-\");\n          for(let i = startX; i <= endX; i++) {\n            this.loop.push({ x: (i - 1), y: (y - 1) });\n          }\n        } else {\n          this.loop.push({ x: (x - 1), y: (y - 1) });\n        }\n      });\n    }\n\n    this.draw(x, y, scale);\n  }\n\n  /*\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (x, y, scale) => {\n    if(this.loop.length === 0) return;\n\n    this.sheet.draw(this.loop[this.frame].x, this.loop[this.frame].y, x, y, scale);\n    this.frame++;\n\n    if(this.frame === this.loop.length) this.frame = 0;\n  }\n};\n\nexport default SpriteAnimation;\n","import { Component } from \"@metaverse-systems/libecs-js\";\nimport SpriteAnimation from \"./SpriteAnimation\";\nimport SpriteSheet from \"./SpriteSheet\";\n\nclass SpriteComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.sprite = new SpriteAnimation(config.canvas, config.url, config.width, config.height, config.characterMap);\n    this.Type = \"SpriteComponent\";\n  }\n}\n\nclass StaticSpriteComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.sprite = new SpriteSheet(config.canvas, config.url, config.width, config.height);\n    this.Type = \"StaticSpriteComponent\";\n  }\n}\n\nclass TilesheetComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.Type = \"TilesheetComponent\";\n  }\n}\n\nclass TileComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.tilesheet = config.tilesheet;\n    this.width = config.width;\n    this.height = config.height;\n    this.x = config.x;\n    this.y = config.y;\n    this.options = config.options;\n    this.Type = \"TileComponent\";\n  }\n}\n\nclass PositionComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.x = config.x;\n    this.y = config.y;\n    this.Type = \"PositionComponent\";\n  }\n}\n\nclass PolygonComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.points = config.points;\n    this.Type = \"PolygonComponent\";\n  }\n}\n\nclass PolylineComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.points = config.points;\n    this.Type = \"PolylineComponent\";\n  }\n}\n\nclass RectangleComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.width = config.width;\n    this.height = config.height;\n    this.color = config.color;\n    this.Type = \"RectangleComponent\";\n  }\n}\n\nexport {\n  SpriteComponent,\n  StaticSpriteComponent,\n  PositionComponent,\n  TileComponent,\n  TilesheetComponent,\n  PolygonComponent,\n  PolylineComponent,\n  RectangleComponent\n};\n","import { System } from '@metaverse-systems/libecs-js';\nimport SpriteSheet from './SpriteSheet';\n\nclass DrawingSystem extends System\n{\n  constructor(config)\n  {\n    if(config === undefined) {\n      config = {};\n    }\n\n    super(config);\n    this.Handle = \"DrawingSystem\";\n    this.tilesheets = {};\n    this.config.camera = { x: 0, y: 0 };\n  }\n\n  Init = () => {\n    this.Container.Components[\"TilesheetComponent\"] = {};\n    this.Container.Components[\"TileComponent\"] = {};\n    this.Container.Components[\"PositionComponent\"] = {};\n    this.Container.Components[\"SpriteComponent\"] = {};\n    this.Container.Components[\"StaticSpriteComponent\"] = {};\n    this.Container.Components[\"PolygonComponent\"] = {};\n    this.Container.Components[\"RectangleComponent\"] = {};\n  }\n\n  ConfigUpdate = (config) => {\n    Object.keys(config).forEach((key) => {\n      this.config[key] = config[key];\n    });\n    if(config.width) this.config.board.width = this.config.width;\n    if(config.height) this.config.board.height = this.config.height;\n  }\n\n  ShouldDraw = (x, y, width, height) => {\n    let viewport = { left: this.config.camera.x,\n                     top: this.config.camera.y,\n                     right: (parseInt(this.config.camera.x) + parseInt(this.config.board.width)),\n                     bottom: (parseInt(this.config.camera.y) + parseInt(this.config.board.height)) };\n\n    let o = { left: x,\n              top: y,\n              right: (parseInt(x) + parseInt(width)),\n              bottom: (parseInt(y) + parseInt(height)) };\n\n    if(o.right < viewport.left) {\n      return false;\n    }\n\n    if(o.left > viewport.right) {\n      return false;\n    }\n\n    return true;\n  }\n\n  Update = () => {\n    if(this.config.board === undefined) return;\n    let ctx = this.config.board.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, this.config.board.width, this.config.board.height);\n\n    if(this.Container.Components[\"RectangleComponent\"] !== undefined) \n    Object.keys(this.Container.Components[\"RectangleComponent\"]).forEach((entity) => {\n      let rect = this.Container.Components[\"RectangleComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n      ctx.beginPath();\n      ctx.fillStyle = rect.color;\n      ctx.rect(pos.x - this.config.camera.x, pos.y - this.config.camera.y, rect.width, rect.height);\n      ctx.fill();\n    });\n\n    if(this.Container.Components[\"TilesheetComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"TilesheetComponent\"]).forEach((entity) => {\n      let tilesheet = this.Container.Components[\"TilesheetComponent\"][entity];\n\n      if(this.tilesheets[tilesheet.url] !== undefined) return;\n      this.tilesheets[tilesheet.url] = new SpriteSheet(this.config.board, tilesheet.url, \n                                                       tilesheet.width, tilesheet.height); \n\n      this.Container.Entity(entity).destroy();\n    });\n\n    if(this.Container.Components[\"TileComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"TileComponent\"]).forEach((entity) => {\n      let tile = this.Container.Components[\"TileComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n      let sheet = this.tilesheets[tile.tilesheet];\n\n      if(this.ShouldDraw(pos.x * tile.width, pos.y * tile.height, tile.width, tile.height)) {\n        sheet.draw(tile.x, tile.y, (pos.x * tile.width) - this.config.camera.x, (pos.y * tile.height) - this.config.camera.y, tile.options);\n      }\n    });\n\n    if(this.Container.Components[\"StaticSpriteComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"StaticSpriteComponent\"]).forEach((entity) => {\n      let sprite = this.Container.Components[\"StaticSpriteComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      if(this.ShouldDraw(pos.x, pos.y, sprite.width, sprite.height)) {\n        sprite.sprite.draw(0, 0, pos.x - this.config.camera.x, pos.y - this.config.camera.y, sprite.options);\n      }\n    });\n\n    if(this.Container.Components[\"SpriteComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"SpriteComponent\"]).forEach((entity) => {\n      let sprite = this.Container.Components[\"SpriteComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      if(this.ShouldDraw(pos.x, pos.y, sprite.width, sprite.height)) {\n        sprite.sprite.animate(sprite.animation, sprite.direction, pos.x - this.config.camera.x, pos.y - this.config.camera.y, {});\n      }\n    });\n\n    if(this.Container.Components[\"PolygonComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"PolygonComponent\"]).forEach((entity) => {\n      let poly = this.Container.Components[\"PolygonComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      ctx.strokeStyle = '#0f0';\n      ctx.beginPath();\n      ctx.moveTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n      poly.points.forEach((point) => {\n        let x = parseInt(point.x) + parseInt(pos.x) - this.config.camera.x;\n        let y = parseInt(point.y) + parseInt(pos.y) - this.config.camera.y;\n        ctx.lineTo(x, y);\n      });\n      ctx.lineTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n      ctx.closePath();\n      ctx.stroke();\n    });\n\n    if(this.Container.Components[\"PolylineComponent\"] !== undefined)\n    Object.keys(this.Container.Components[\"PolylineComponent\"]).forEach((entity) => {\n      let poly = this.Container.Components[\"PolylineComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n      ctx.strokeStyle = '#f00';\n      ctx.beginPath();\n      ctx.moveTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n      poly.points.forEach((point) => {\n        let x = parseInt(point.x) + parseInt(pos.x) - this.config.camera.x;\n        let y = parseInt(point.y) + parseInt(pos.y) - this.config.camera.y;\n        ctx.lineTo(x, y);\n      });\n      ctx.lineTo(pos.x - this.config.camera.x, pos.y - this.config.camera.y);\n      ctx.closePath();\n      ctx.stroke();\n    });\n  }\n}\n\nexport default DrawingSystem;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { Manager } from \"@metaverse-systems/libecs-js\";\nimport { RectangleComponent, SpriteComponent, StaticSpriteComponent, \n         PositionComponent, TileComponent, TilesheetComponent, \n         PolygonComponent, PolylineComponent } from \"./Components\";\nimport DrawingSystem from \"./DrawingSystem\";\nimport tmx from \"tiled-tmx-parser\";\nimport Maps from \"./maps.json\";\n\nconst ECS = new Manager();\n\nconst baseURL = \"https://raw.githubusercontent.com/hawkthorne/hawkthorne-journey/master\";\nconst characterBaseURL = baseURL + \"/src/characters/\";\nconst characterImagesBaseURL = baseURL + \"/src/images/characters/\";\nconst characterMapURL = baseURL + \"/src/character_map.json\";\nconst baseMusicURL = baseURL + \"/src/audio/music/\";\n\nconst characterNames = [\n  \"abed\", \"britta\", \"chang\", \"duncan\", \"garrett\", \"guzman\", \"leonard\", \"rich\", \"troy\", \"vicedean\",\n  \"annie\", \"buddy\", \"dean\", \"fatneil\", \"gilbert\", \"jeff\", \"pierce\", \"shirley\", \"vaughn\", \"vicki\"\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      music: \"\",\n      volume: 0.25,\n      map: \"studyroom\",\n      animation: \"idle\",\n      direction: \"right\",\n      characterMap: {},\n      characters: {},\n      drawingSystem: new DrawingSystem({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }),\n      levelStart: { x: 0, y: 0 },\n      playerCharacter: \"annie\",\n      playerCostume: \"santa\",\n      camera: { x: 0, y: 0 }\n    };\n\n    this.world = ECS.Container();\n    this.world.System(this.state.drawingSystem);\n    this.world.Start(1000 / 15);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.keyDown);\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.keyDown);\n\n    this.handleResize();\n    fetch(characterMapURL)\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({ characterMap: data }, () => {\n        this.initializeMap();\n      });\n    });\n\n    characterNames.forEach((name) => {\n      let cURL = characterBaseURL + name + \".json\";\n      fetch(cURL)\n      .then((response) => response.json())\n      .then((data) => {\n        let characters = Object.assign({}, this.state.characters);\n        characters[name] = data;\n        this.setState({ characters: characters });\n      });\n    });\n  }\n\n  handleResize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    if(this.state.drawingSystem !== null) {\n      this.state.drawingSystem.ConfigUpdate({ height: height, width: width, board: document.getElementById('board') });\n    }\n  }\n\n  setBackgroundColor = (map) => {\n    const e = this.world.Entity();\n    e.Component(new PositionComponent({ x: 0, y: 0 }));\n\n    const backgroundWidth = map.width * map.tileWidth;\n    const backgroundHeight = map.height * map.tileHeight;\n    const color = \"#\" + parseInt(map.properties.red).toString(16)\n                      + parseInt(map.properties.green).toString(16)\n                      + parseInt(map.properties.blue).toString(16);\n\n    e.Component(new RectangleComponent({ width: backgroundWidth, height: backgroundHeight, color: color }));\n  }\n\n  setMusic = (track) => {\n    if(track === undefined) {\n      track = \"level\";\n    }\n\n    let soundtrackURL = \"\";\n    if(track.search(\"ogg\") !== -1) {\n      soundtrackURL = baseURL + \"/src/\" + track;\n    } else {\n      soundtrackURL = baseMusicURL + track + \".ogg\";\n    }\n\n    this.setState({ music: soundtrackURL }, () => {\n      document.getElementById('rap').play();\n    });\n  }\n\n  initializeMap = () => {\n    const mapURL = baseURL + \"/src/maps/\" + this.state.map + \".tmx\";\n    fetch(mapURL)\n    .then((response) => response.text())\n    .then((data) => {\n      tmx.parse(data, \"\", (err, map) => {\n        if(map.properties.red !== undefined) this.setBackgroundColor(map);\n        this.setMusic(map.properties.soundtrack);\n        map.layers.forEach((layer) => {\n          switch(layer.type)\n          {\n            case \"tile\":\n              this.buildTileLayer(layer);\n              break;\n            case \"object\":\n              this.buildObjectLayer(layer);\n              break;\n            default:\n              console.log(\"initializeMap(): Unknown layer type: \" + layer.type);\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  moveCamera = (x, y) => {\n    this.setState({ camera: { x: x, y: y } }, () => {\n      this.state.drawingSystem.ConfigUpdate({ camera: this.state.camera });\n    });\n  }\n\n  centerCamera = () => {\n    const pos = this.world.Components[\"PositionComponent\"][\"player\"];\n    const width = this.state.drawingSystem.config.width;\n\n    const rightTrigger = this.state.camera.x + (width * .75);\n    if(pos.x > rightTrigger) {\n      this.moveCamera(this.state.camera.x + 5, this.state.camera.y);\n      return;\n    }\n\n    const leftTrigger = this.state.camera.x + (width *.25);\n    if(pos.x < leftTrigger) {\n      let newX = this.state.camera.x - 5;\n      if(newX < 0) newX = 0;\n      this.moveCamera(newX, this.state.camera.y);\n      return;\n    }\n  }\n\n  setBackgroundColor = (map) => {\n    const e = this.world.Entity();\n    e.Component(new PositionComponent({ x: 0, y: 0 }));\n\n    const backgroundWidth = map.width * map.tileWidth;\n    const backgroundHeight = map.height * map.tileHeight;\n    const color = \"#\" + parseInt(map.properties.red).toString(16)\n                      + parseInt(map.properties.green).toString(16)\n                      + parseInt(map.properties.blue).toString(16);\n\n    e.Component(new RectangleComponent({ width: backgroundWidth, height: backgroundHeight, color: color }));\n  }\n\n  setMusic = (track) => {\n    if(track === undefined) {\n      track = \"level\";\n    }\n\n    let soundtrackURL = \"\";\n    if(track.search(\"ogg\") !== -1) {\n      soundtrackURL = baseURL + \"/src/\" + track;\n    } else {\n      soundtrackURL = baseMusicURL + track + \".ogg\";\n    }\n\n    this.setState({ music: soundtrackURL }, () => {\n      document.getElementById('rap').play();\n    });\n  }\n\n  initializeMap = () => {\n    const mapURL = baseURL + \"/src/maps/\" + this.state.map + \".tmx\";\n    fetch(mapURL)\n    .then((response) => response.text())\n    .then((data) => {\n      tmx.parse(data, \"\", (err, map) => {\n        if(map.properties.red !== undefined) this.setBackgroundColor(map);\n        this.setMusic(map.properties.soundtrack);\n        map.layers.forEach((layer) => {\n          switch(layer.type)\n          {\n            case \"tile\":\n              this.buildTileLayer(layer);\n              break;\n            case \"object\":\n              this.buildObjectLayer(layer);\n              break;\n            default:\n              console.log(\"initializeMap(): Unknown layer type: \" + layer.type);\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  initializePlayer = (pos) => {\n    let canvas = document.getElementById('board');\n    let spriteURL = characterImagesBaseURL + this.state.playerCharacter + \"/\" + this.state.playerCostume + \".png\";\n\n    let e = this.world.Entity(\"player\");\n    if(pos !== undefined) e.Component(new PositionComponent(pos));\n    else e.Component(new PositionComponent(this.state.levelStart));\n    e.Component(new SpriteComponent({ canvas: canvas, url: spriteURL, width: 48, height: 48,\n      characterMap: this.state.characterMap, animation: this.state.animation, direction: this.state.direction }));\n  }\n\n  buildObjectLayer = (layer) => {\n    layer.objects.forEach((o) => {\n      this.buildObject(o);\n    });\n  }\n\n  buildObject = (o) => {\n    if(o.type === \"sprite\") {\n      this.buildSprite(o);\n      return;\n    }\n\n    if(o.type === \"door\") {\n      if(o.name !== \"main\") return;\n      this.setState({ levelStart: { x: o.x - 0, y: o.y - 0 } }, () => {\n        this.initializePlayer();\n      });\n    }\n\n    if(o.polygon !== null) {\n      this.buildPolygon(o);\n      return;\n    }\n\n    if(o.polyline !== null) {\n      this.buildPolyline(o);\n      return;\n    }\n  }\n\n  buildPolygon = (o) => {\n    const e = this.world.Entity();\n    e.Component(new PositionComponent({ x: o.x, y: o.y }));\n    e.Component(new PolygonComponent({ points: o.polygon }));\n  }\n\n  buildPolyline = (o) => {\n    const e = this.world.Entity();\n    e.Component(new PositionComponent({ x: o.x, y: o.y }));\n    e.Component(new PolylineComponent({ points: o.polyline }));\n  }\n\n  buildSprite = (o) => {\n    const url = baseURL + \"/src/\" + o.properties.sheet;\n\n    const e = this.world.Entity();\n    e.Component(new PositionComponent({ x: o.x, y: o.y }));\n\n    const options = { flipHorizontal: o.properties.flip === \"true\" ? true : false };\n    e.Component(new StaticSpriteComponent({ canvas: document.getElementById('board'), url: url, width: o.properties.width,\n                                            height: o.properties.height, x: o.x, y: o.y, options: options }));\n  }\n\n  buildTileLayer = (layer) => {\n    const tileSet = layer.map.tileSets[0];\n    const tilesheetURL = baseURL + \"/src/images/\" + tileSet.image.source;\n    const tilesheetCols = tileSet.image.width / tileSet.tileWidth;\n\n    let e = this.world.Entity();\n    e.Component(new TilesheetComponent({ url: tilesheetURL, width: tileSet.tileWidth, height: tileSet.tileHeight }));\n\n    let maxCols = layer.map.width;\n    let maxRows = layer.map.height;\n\n    let index = 0;\n    for(let y = 0; y < maxRows; y++)\n    {\n      for(let x = 0; x < maxCols; x++)\n      {\n        if(layer.tiles[index] === undefined) {\n          index++;\n          continue;\n        }\n\n        let tileId = layer.tiles[index].id;\n\n        if(tileId === -1)\n        {\n            index++;\n            continue;\n        }\n\n        let tX = tileId % tilesheetCols;\n        let tY = (tileId - tX) / tilesheetCols;\n\n        let options = {};\n        if(layer.horizontalFlips[index] === true) {\n          options.flipHorizontal = true;\n        }\n        if(layer.verticalFlips[index] === true) {\n          options.flipVertical = true;\n        }\n        if(layer.diagonalFlips[index] === true) {\n          options.flipDiagonal = true;\n        }\n        e = this.world.Entity();\n        e.Component(new PositionComponent({ x: x, y: y }));\n        e.Component(new TileComponent({ tilesheet: tilesheetURL, width: tileSet.tileWidth, height: tileSet.tileHeight, x: tX, y: tY, options: options }));\n\n        index++;\n      }\n    }\n  }\n\n  changeAnimation = (e) => {\n    this.setState({ animation: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  changeDirection = (e) => {\n    this.setState({ direction: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  updateSpriteComponent = () => {\n    Object.keys(this.world.Components[\"SpriteComponent\"]).forEach((entity) => {\n      this.world.Components[\"SpriteComponent\"][entity].animation = this.state.animation;\n      this.world.Components[\"SpriteComponent\"][entity].direction = this.state.direction;\n    });\n  }\n\n  destroyMap = () => {\n    Object.keys(this.world.Components[\"TileComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    Object.keys(this.world.Components[\"StaticSpriteComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    Object.keys(this.world.Components[\"PolygonComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    if(this.world.Components[\"PolylineComponent\"] !== undefined)\n    Object.keys(this.world.Components[\"PolylineComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n\n    if(this.world.Components[\"RectangleComponent\"] !== undefined)\n    Object.keys(this.world.Components[\"RectangleComponent\"]).forEach((entity) => {\n      this.world.Entity(entity).destroy();\n    });\n  }\n\n  changeMap = (e) => {\n    this.destroyMap();\n    this.setState({ map: e.target.value }, () => {\n      this.initializeMap();\n    });\n  }\n\n  volume = (e) => {\n    this.setState({ volume: e.target.volume });\n  }\n\n  keyDown = (e) => {\n    let newPos = { x: 0, y: 0 };\n    switch(e.key) {\n      case 'd':\n      case 'D':\n        newPos.x = 5;\n        this.setState({ direction: \"right\" });\n        break;\n      case 'a':\n      case 'A':\n        newPos.x = -5;\n        this.setState({ direction: \"left\" });\n        break;\n      default:\n        break;\n    }\n\n    if(newPos.x || newPos.y) {\n      let pos = this.world.Components[\"PositionComponent\"][\"player\"];\n      newPos.x += pos.x;\n      newPos.y += pos.y;\n      this.initializePlayer(newPos);\n      this.centerCamera();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"board\" width=\"1280\" height=\"720\" />\n        <div style={ {float: 'right'} }>\n          <label htmlFor=\"map\">Choose map:</label>\n          <br />\n          <select id=\"map\" defaultValue={this.state.map} onChange={this.changeMap}>\n            {Maps.map((m, i) => {\n              return <option key={i}>{m}</option>\n            })}\n          </select>\n          <br />\n          <br />\n          <label htmlFor=\"animation\">Choose animation:</label>\n          <br />\n          <select id=\"animation\" defaultValue={this.state.animation} onChange={this.changeAnimation}>\n            {Object.keys(this.state.characterMap).map((a, i) => <option key={i}>{a}</option>)}\n          </select>\n          <br />\n          <br />\n          <label htmlFor=\"direction\">Choose direction:</label>\n          <br />\n          <select id=\"direction\" defaultValue={this.state.direction} onChange={this.changeDirection}>\n            <option value=\"left\">Left</option>\n            <option value=\"right\">Right</option>\n          </select>\n          <br />\n          <br />\n          <ReactAudioPlayer id=\"rap\"\n            src={this.state.music}\n            loop={true}\n            controls={true}\n            onVolumeChanged={this.volume}\n            volume={this.state.volume}\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}