{"version":3,"sources":["SpriteSheet.js","SpriteAnimation.js","Components.js","DrawingSystem.js","App.js","reportWebVitals.js","index.js"],"names":["SpriteSheet","canvas","url","spriteWidth","spriteHeight","draw","spriteX","spriteY","x","y","scale","context","drawImage","sheet","this","Image","src","getContext","SpriteAnimation","characterMap","animate","animation","direction","restart","frame","loop","charMap","animations","Array","isArray","repeat","forEach","e","split","search","startX","endX","i","push","length","SpriteComponent","config","sprite","width","height","Type","Component","PositionComponent","DrawingSystem","undefined","ConfigUpdate","Object","keys","key","Update","board","clearRect","Container","Components","entity","pos","Handle","System","ECS","Manager","characterNames","App","props","componentDidMount","handleResize","fetch","baseURL","then","response","json","data","setState","initialize","name","characters","assign","state","window","innerWidth","innerHeight","drawingSystem","document","getElementById","c","spriteURL","characterImagesBaseURL","world","Entity","console","log","Export","Start","changeAnimation","target","value","updateSpriteComponent","changeDirection","className","defaultValue","onChange","map","a","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e541e819.chunk.js","sourcesContent":["class SpriteSheet\n{\n  constructor(canvas, url, spriteWidth, spriteHeight) {\n    this.sheet = new Image();\n    this.sheet.src = url;\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.context = canvas.getContext(\"2d\");\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (spriteX, spriteY, x, y, scale) => {\n    this.context.drawImage(this.sheet,\n      (spriteX * this.spriteWidth) + 1, (spriteY * this.spriteHeight) + 1,\n      this.spriteWidth - 2, this.spriteHeight - 1,\n      x, y,\n      this.spriteWidth * scale, this.spriteHeight * scale\n    );\n  }\n};\n\nexport default SpriteSheet;\n","import SpriteSheet from './SpriteSheet';\n\nclass SpriteAnimation\n{\n  constructor(canvas, url, spriteWidth, spriteHeight, characterMap) {\n    this.sheet = new SpriteSheet(canvas, url, spriteWidth, spriteHeight);\n    this.frame = 0;\n    this.animation = \"\";\n    this.direction = \"\";\n    this.repeat = \"\";\n    this.loop = [];\n    this.characterMap = characterMap;\n  }\n\n  animate = (animation, direction, x, y, scale) => {\n    let restart = false;\n\n    if(this.animation !== animation) {\n      this.animation = animation;\n      restart = true;\n    }\n\n    if(this.direction !== direction) {\n      this.direction = direction;\n      restart = true;\n    }\n\n    if(restart) {\n      this.frame = 0;\n      this.loop = [];\n\n      let charMap = this.characterMap[animation];\n      let animations = [];\n      if(Array.isArray(charMap)) {\n        // No direction\n        this.repeat = charMap[0];\n        animations = charMap[1];\n      } else {\n        this.repeat = charMap[direction][0];\n        animations = charMap[direction][1];\n      }\n\n      animations.forEach((e) => {\n        // subtracting 1 because character_map.json uses 1-based indexing\n\n        let [x, y] = e.split(\",\");\n        if(x.search(\"-\") !== -1) {\n          // multiple x coords in one entry, split them up\n          let [startX, endX] = x.split(\"-\");\n          for(let i = startX; i <= endX; i++) {\n            this.loop.push({ x: (i - 1), y: (y - 1) });\n          }\n        } else {\n          this.loop.push({ x: (x - 1), y: (y - 1) });\n        }\n      });\n    }\n\n    this.draw(x, y, scale);\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (x, y, scale) => {\n    if(this.loop.length === 0) return;\n\n    this.sheet.draw(this.loop[this.frame].x, this.loop[this.frame].y, x, y, scale);\n    this.frame++;\n\n    if(this.frame === this.loop.length) this.frame = 0;\n  }\n};\n\nexport default SpriteAnimation;\n","import { Component } from \"@metaverse-systems/libecs-js\";\nimport SpriteAnimation from \"./SpriteAnimation\";\n\nclass SpriteComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.sprite = new SpriteAnimation(config.canvas, config.url, config.width, config.height, config.characterMap);\n    this.Type = \"SpriteComponent\";\n  }\n}\n\nclass PositionComponent extends Component\n{\n  constructor(config) {\n    super(config);\n    this.x = config.x;\n    this.y = config.y;\n    this.Type = \"PositionComponent\";\n  }\n}\n\nexport {\n  SpriteComponent,\n  PositionComponent\n};\n","import { System } from '@metaverse-systems/libecs-js';\n\nclass DrawingSystem extends System\n{\n  constructor(config)\n  {\n    if(config === undefined) {\n      config = {};\n    }\n\n    super(config);\n    this.Handle = \"DrawingSystem\";\n  }\n\n  ConfigUpdate = (config) => {\n    Object.keys(config).forEach((key) => {\n      this.config[key] = config[key];\n    });\n  }\n\n  Update = () => {\n    if(this.config.board === undefined) return;\n    let ctx = this.config.board.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, this.config.board.width, this.config.board.height);\n\n    Object.keys(this.Container.Components[\"SpriteComponent\"]).forEach((entity) => {\n      let sprite = this.Container.Components[\"SpriteComponent\"][entity];\n      let pos = this.Container.Components[\"PositionComponent\"][entity];\n\n\n      if(sprite.sprite) {\n        sprite.sprite.animate(sprite.animation, sprite.direction, pos.x, pos.y, 2);\n      }\n    });\n  }\n}\n\nexport default DrawingSystem;\n","import React, { Component } from \"react\";\nimport './App.css';\nimport { Manager } from \"@metaverse-systems/libecs-js\";\nimport { SpriteComponent, PositionComponent } from \"./Components\";\nimport DrawingSystem from \"./DrawingSystem\";\n\nconst ECS = new Manager();\n\nconst baseURL = \"https://raw.githubusercontent.com/hawkthorne/hawkthorne-journey/master\";\nconst characterBaseURL = baseURL + \"/src/characters/\";\nconst characterImagesBaseURL = baseURL + \"/src/images/characters/\";\nconst characterMapURL = baseURL + \"/src/character_map.json\";\nconst characterNames = [\n  \"abed\", \"britta\", \"chang\", \"duncan\", \"garrett\", \"guzman\", \"leonard\", \"rich\",     \"troy\", \"vicedean\",\n  \"annie\", \"buddy\", \"dean\", \"fatneil\", \"gilbert\", \"jeff\", \"pierce\", \"shirley\", \"vaughn\", \"vicki\"\n];\n\nconst costume = \"base\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: \"walk\",\n      direction: \"right\",\n      characterMap: {},\n      characters: {},\n      drawingSystem: new DrawingSystem({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    };\n\n    this.world = ECS.Container();\n    this.world.System(this.state.drawingSystem);\n  }\n\n  componentDidMount = () => {\n    this.handleResize();\n    fetch(characterMapURL)\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({ characterMap: data }, () => {\n        this.initialize();\n      });\n    });\n\n    characterNames.forEach((name) => {\n      let cURL = characterBaseURL + name + \".json\";\n      fetch(cURL)\n      .then((response) => response.json())\n      .then((data) => {\n        let characters = Object.assign({}, this.state.characters);\n        characters[name] = data;\n        this.setState({ characters: characters });\n      });\n    });\n  }\n\n  handleResize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    if(this.state.drawingSystem !== null) {\n      this.state.drawingSystem.ConfigUpdate({ height: height, width: width, board: document.getElementById('board') });\n    }\n  }\n\n  initialize = () => {\n    let canvas = document.getElementById('board');\n\n    let x = 0;\n    let y = 50;\n    characterNames.forEach((c) => {\n      let spriteURL = characterImagesBaseURL + c + \"/\" + costume + \".png\";\n      let e = this.world.Entity();\n      e.Component(new PositionComponent({ x: x, y: y }));\n      e.Component(new SpriteComponent({ canvas: canvas, url: spriteURL, width: 48, height: 48, \n        characterMap: this.state.characterMap, animation: this.state.animation, direction: this.state.direction }));\n\n      x += 100;\n      if(x > 900) {\n        x = 0;\n        y += 100;\n      }\n    });\n\n    console.log(this.world.Export());\n    this.world.Start(250);\n  }\n\n  changeAnimation = (e) => {\n    this.setState({ animation: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  changeDirection = (e) => {\n    this.setState({ direction: e.target.value }, () => {\n      this.updateSpriteComponent();\n    });\n  }\n\n  updateSpriteComponent = () => {\n    Object.keys(this.world.Components[\"SpriteComponent\"]).forEach((entity) => {\n      this.world.Components[\"SpriteComponent\"][entity].animation = this.state.animation;\n      this.world.Components[\"SpriteComponent\"][entity].direction = this.state.direction;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <select defaultValue={this.state.animation} onChange={this.changeAnimation}>\n          {Object.keys(this.state.characterMap).map((a, i) => {\n            return <option key={i}>{a}</option>\n          })}\n        </select>\n        <select defaultValue={this.state.direction} onChange={this.changeDirection}>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </select>\n        <canvas id=\"board\" width=\"1280\" height=\"720\" />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}