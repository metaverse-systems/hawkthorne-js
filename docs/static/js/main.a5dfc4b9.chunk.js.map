{"version":3,"sources":["SpriteSheet.js","SpriteAnimation.js","App.js","reportWebVitals.js","index.js"],"names":["SpriteSheet","canvas","url","spriteWidth","spriteHeight","draw","spriteX","spriteY","x","y","scale","context","drawImage","sheet","this","Image","src","getContext","SpriteAnimation","characterMap","animate","animation","direction","restart","frame","loop","charMap","animations","Array","isArray","repeat","forEach","e","split","search","startX","endX","i","push","length","characters","App","props","componentDidMount","fetch","then","response","json","data","setState","initialize","document","getElementById","c","spriteURL","charactersBaseURL","sprites","state","setInterval","clearRect","width","height","sprite","changeAnimation","target","value","changeDirection","className","defaultValue","onChange","Object","keys","map","a","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a5dfc4b9.chunk.js","sourcesContent":["class SpriteSheet\n{\n  constructor(canvas, url, spriteWidth, spriteHeight) {\n    this.sheet = new Image();\n    this.sheet.src = url;\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.context = canvas.getContext(\"2d\");\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (spriteX, spriteY, x, y, scale) => {\n    this.context.drawImage(this.sheet,\n      (spriteX * this.spriteWidth) + 1, (spriteY * this.spriteHeight) + 1,\n      this.spriteWidth - 2, this.spriteHeight - 1,\n      x, y,\n      this.spriteWidth * scale, this.spriteHeight * scale\n    );\n  }\n};\n\nexport default SpriteSheet;\n","import SpriteSheet from './SpriteSheet';\n\nclass SpriteAnimation\n{\n  constructor(canvas, url, spriteWidth, spriteHeight, characterMap) {\n    this.sheet = new SpriteSheet(canvas, url, spriteWidth, spriteHeight);\n    this.frame = 0;\n    this.animation = \"\";\n    this.direction = \"\";\n    this.repeat = \"\";\n    this.loop = [];\n    this.characterMap = characterMap;\n  }\n\n  animate = (animation, direction, x, y, scale) => {\n    let restart = false;\n\n    if(this.animation !== animation) {\n      this.animation = animation;\n      restart = true;\n    }\n\n    if(this.direction !== direction) {\n      this.direction = direction;\n      restart = true;\n    }\n\n    if(restart) {\n      this.frame = 0;\n      this.loop = [];\n\n      let charMap = this.characterMap[animation];\n      let animations = [];\n      if(Array.isArray(charMap)) {\n        // No direction\n        this.repeat = charMap[0];\n        animations = charMap[1];\n      } else {\n        this.repeat = charMap[direction][0];\n        animations = charMap[direction][1];\n      }\n\n      animations.forEach((e) => {\n        // subtracting 1 because character_map.json uses 1-based indexing\n\n        let [x, y] = e.split(\",\");\n        if(x.search(\"-\") !== -1) {\n          // multiple x coords in one entry, split them up\n          let [startX, endX] = x.split(\"-\");\n          for(let i = startX; i <= endX; i++) {\n            this.loop.push((i - 1) + \",\" + (y - 1));\n          }\n        } else {\n          this.loop.push((x - 1) + \",\" + (y - 1));\n        }\n      });\n    }\n\n    this.draw(x, y, scale);\n  }\n\n  /*\n   *  spriteX: column in sprite sheet\n   *  spriteY: row in sprite sheet\n   *  x, y: Canvas coordinates\n   *  scale: Shrink or enlarge sprite\n   */\n  draw = (x, y, scale) => {\n    if(this.loop.length === 0) return;\n\n    let [spriteX, spriteY] = this.loop[this.frame].split(\",\");\n    this.frame++;\n\n    if(this.frame === this.loop.length) this.frame = 0;\n\n    this.sheet.draw(spriteX, spriteY, x, y, scale);\n  }\n};\n\nexport default SpriteAnimation;\n","import React, { Component } from \"react\";\nimport './App.css';\nimport SpriteAnimation from './SpriteAnimation';\n\nconst charactersBaseURL = \"https://raw.githubusercontent.com/hawkthorne/hawkthorne-journey/master/src/images/characters/\";\nconst characterMapURL = \"https://raw.githubusercontent.com/hawkthorne/hawkthorne-journey/master/src/character_map.json\";\nconst characters = [\n  \"abed\", \"britta\", \"chang\", \"duncan\", \"garrett\", \"guzman\", \"leonard\", \"rich\",     \"troy\", \"vicedean\",\n  \"annie\", \"buddy\", \"dean\", \"fatneil\", \"gilbert\", \"jeff\", \"pierce\", \"shirley\", \"vaughn\", \"vicki\"\n];\n\nconst costume = \"base\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: \"walk\",\n      direction: \"right\",\n      characterMap: {}\n    };\n\n    this.sprites = [];\n  }\n\n  componentDidMount = () => {\n    fetch(characterMapURL)\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({ characterMap: data }, () => {\n        this.initialize();\n      });\n    });\n  }\n\n  initialize = () => {\n    let canvas = document.getElementById('board');\n\n    characters.forEach((c) => {\n      let spriteURL = charactersBaseURL + c + \"/\" + costume + \".png\";\n      this.sprites.push(new SpriteAnimation(canvas, spriteURL, 48, 48, this.state.characterMap));\n    });\n\n    setInterval(() => {\n      let ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      let x = 0;\n      let y = 50;\n      this.sprites.forEach((sprite) => {\n        sprite.animate(this.state.animation, this.state.direction, x, y, 2);\n        x += 100;\n        if(x > 900) {\n          x = 0;\n          y += 100;\n        }\n      });\n    }, 250);\n  }\n\n  changeAnimation = (e) => {\n    this.setState({ animation: e.target.value });\n  }\n\n  changeDirection = (e) => {\n    this.setState({ direction: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <select defaultValue={this.state.animation} onChange={this.changeAnimation}>\n          {Object.keys(this.state.characterMap).map((a, i) => {\n            return <option key={i}>{a}</option>\n          })}\n        </select>\n        <select defaultValue={this.state.direction} onChange={this.changeDirection}>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </select>\n        <canvas id=\"board\" width=\"1280\" height=\"720\" />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}